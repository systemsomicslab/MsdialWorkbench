<UserControl x:Class="CompMs.App.Msdial.View.MsResult.ProductIonIntensityMapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:design="clr-namespace:CompMs.Graphics.Design;assembly=ChartDrawing"
             xmlns:core="clr-namespace:CompMs.Graphics.Core.Base;assembly=ChartDrawing"
             xmlns:io="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             xmlns:components="clr-namespace:CompMs.Common.Components;assembly=Common"
             xmlns:viewchart="clr-namespace:CompMs.App.Msdial.View.Chart"
             xmlns:model="clr-namespace:CompMs.App.Msdial.Model.MsResult"
             xmlns:viewmodel="clr-namespace:CompMs.App.Msdial.ViewModel.MsResult"
             xmlns:local="clr-namespace:CompMs.App.Msdial.View.MsResult"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:Background="White"
             d:DataContext="{d:DesignInstance Type={x:Type viewmodel:ProductIonIntensityMapViewModel}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/ChartStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <design:ConstantBrushMapper x:Key="brush" Brush="Black"/>
            <chart:RenderAreaControlState x:Key="DisableMove" MoveByDragIsEnabled="False"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="32"/>
        </Grid.RowDefinitions>

        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Save image as...">
                    <MenuItem Header="Save as emf"
                              Command="{x:Static io:SaveImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save as png"
                              Command="{x:Static io:SaveImageAsCommand.PngInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </MenuItem>
                <MenuItem Header="Copy image as...">
                    <MenuItem Header="Copy as emf"
                              Command="{x:Static io:CopyImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Copy as png"
                              Command="{x:Static io:CopyImageAsCommand.BitmapInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>

        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.Resources>
                <RotateTransform x:Key="rotateRight" Angle="90" CenterX=".5" CenterY=".5"/>
                <RotateTransform x:Key="rotateLeft" Angle="-90" CenterX=".5" CenterY=".5"/>
                <Style x:Key="HorizontalSplitter" TargetType="GridSplitter">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Width" Value="2"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0,0,0,-2"/>
                </Style>
                <Style x:Key="VerticalSplitter" TargetType="GridSplitter">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Height" Value="2"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="-2,0,0,0"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="16"/>
            </Grid.RowDefinitions>

            <TextBlock Text="Intensity"
                       LayoutTransform="{StaticResource rotateLeft}"
                       VerticalAlignment="Center"
                       Grid.Column="0" Grid.Row="0"/>
            <TextBlock Text="m/z of selected ion"
                       LayoutTransform="{StaticResource rotateLeft}"
                       VerticalAlignment="Center"
                       Grid.Column="0" Grid.Row="2"/>
            <TextBlock Text="Scan time"
                       HorizontalAlignment="Center"
                       Grid.Column="2" Grid.Row="4"/>
            <TextBlock Text="Intensity"
                       HorizontalAlignment="Center"
                       Grid.Column="4" Grid.Row="4"/>

            <chart:HeatmapControl x:Name="pimap"
                                  ItemsSource="{Binding Path=LoadedIons.Value, Mode=OneWay}"
                                  DataType="{x:Type model:MappedIon}"
                                  HorizontalPropertyName=""
                                  VerticalPropertyName=""
                                  DegreePropertyName="Intensity"
                                  HorizontalAxis="{Binding Path=IntensityMapHorizontalAxis}"
                                  VerticalAxis="{Binding Path=IntensityMapVerticalAxis}"
                                  SelectedItem="{Binding Path=SelectedIon.Value, Mode=TwoWay}"
                                  Grid.Column="2" Grid.Row="2">
                <chart:HeatmapControl.ToolTip>
                    <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}"
                             Placement="Relative"
                             PlacementRectangle="0,-20,0,20"
                             HorizontalOffset="{Binding Path=(chart:HeatmapControl.FocusedPoint).X}"
                             VerticalOffset="{Binding Path=(chart:HeatmapControl.FocusedPoint).Y}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Path=(chart:HeatmapControl.FocusedItem).(model:MappedIon.Time),
                                                      StringFormat=Time: {0}}"/>
                            <TextBlock Text="{Binding Path=(chart:HeatmapControl.FocusedItem).(model:MappedIon.Mz),
                                                      StringFormat=m/z: {0}}"/>
                            <TextBlock Text="{Binding Path=(chart:HeatmapControl.FocusedItem).(model:MappedIon.Intensity),
                                                      StringFormat=Intensity: {0}}"/>
                            <TextBlock Text="{Binding Path=(chart:HeatmapControl.FocusedItem).(model:MappedIon.ExperimentID),
                                                      StringFormat=ExperimentID: {0}}" />
                            <TextBlock Text="{Binding Path=(chart:HeatmapControl.FocusedItem).(model:MappedIon.ID),
                                                      StringFormat=CycleID: {0}}" />
                        </StackPanel>
                    </ToolTip>
                </chart:HeatmapControl.ToolTip>
            </chart:HeatmapControl>
            <chart:VerticalAxisControl VerticalAxis="{Binding Path=IntensityMapVerticalAxis}"
                                       Grid.Column="1" Grid.Row="2"/>
            <chart:HorizontalAxisControl HorizontalAxis="{Binding Path=IntensityMapHorizontalAxis}"
                                         Grid.Column="2" Grid.Row="3"/>
            <Canvas DataContext="{Binding SelectedPoint, ElementName=pimap}"
                    ClipToBounds="True"
                    IsHitTestVisible="False"
                    Grid.Column="2" Grid.Row="2">
                <Canvas.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=.}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Canvas.Resources>
                <Rectangle Fill="Red" VerticalAlignment="Stretch" IsHitTestVisible="False"
                           Width="1" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}"
                           Canvas.Left="{Binding Path=X}"/>
                <Rectangle Fill="Red" VerticalAlignment="Stretch" IsHitTestVisible="False"
                           Height="1" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}"
                           Canvas.Top="{Binding Path=Y}"/>
            </Canvas>

            <chart:ScatterControl ItemsSource="{Binding Path=NearestIon.Value}"
                                  HorizontalPropertyName=""
                                  VerticalPropertyName=""
                                  HorizontalAxis="{Binding Path=IntensityMapHorizontalAxis}"
                                  VerticalAxis="{Binding Path=IntensityMapVerticalAxis}"
                                  PointGeometry="M 0 1 L 9 10 H 11 L 1 0 L 11 -10 H 9 L 0 -1 L -9 -10 H -11 L -1 0 L -11 10 H -9 L 0 1 Z"
                                  Radius="8"
                                  ClipToBounds="True"
                                  IsHitTestVisible="False"
                                  Grid.Column="2" Grid.Row="2">
                <chart:ScatterControl.BrushMapper>
                    <design:ConstantBrushMapper Brush="Gray"/>
                </chart:ScatterControl.BrushMapper>
            </chart:ScatterControl>

            <Border Background="WhiteSmoke"
                    core:ChartBaseControl.HorizontalAxis="{Binding Path=IntensityMapHorizontalAxis}"
                    core:ChartBaseControl.VerticalAxis="{Binding Path=IntensityMapDegreeAxis}"
                    Grid.Column="2" Grid.Row="0">
                <Grid>
                    <chart:LineChartControl ItemsSource="{Binding Path=SelectedIonExperiment.Value, Mode=OneWay}"
                                            HorizontalPropertyName=""
                                            VerticalPropertyName="Intensity"/>
                    <chart:VerticalLine Item="{Binding Path=SelectedIon.Value}"
                                        DataType="{x:Type model:MappedIon}"
                                        HorizontalProperty=""
                                        VerticalProperty="Intensity"
                                        LineThickness="1">
                        <chart:VerticalLine.LineBrush>
                            <design:ConstantBrushMapper Brush="Red"/>
                        </chart:VerticalLine.LineBrush>
                    </chart:VerticalLine>
                    <TextBlock Margin="4" HorizontalAlignment="Right">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="ExeperimentID: {0} m/z: {1:F5}">
                                <Binding Path="SelectedItem.ExperimentID" ElementName="pimap"/>
                                <Binding Path="SelectedItem.Mz" ElementName="pimap"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </Border>
            <chart:VerticalAxisControl VerticalAxis="{Binding Path=IntensityMapDegreeAxis}"
                                       Grid.Column="1" Grid.Row="0"/>
            <chart:HorizontalAxisControl HorizontalAxis="{Binding Path=IntensityMapHorizontalAxis}"
                                         Grid.Column="2" Grid.Row="1"/>

            <Border Background="WhiteSmoke" LayoutTransform="{StaticResource rotateRight}"
                    core:ChartBaseControl.HorizontalAxis="{Binding Path=IntensityMapVerticalAxis}"
                    core:ChartBaseControl.VerticalAxis="{Binding Path=IntensityMapDegreeAxis}"
                    core:ChartBaseControl.FlippedX="True"
                    Grid.Column="4" Grid.Row="2">
                <Grid>
                    <chart:LineChartControl ItemsSource="{Binding Path=SelectedIonCycle.Value, Mode=OneWay}"
                                            HorizontalPropertyName=""
                                            VerticalPropertyName="Intensity"/>
                    <chart:VerticalLine Item="{Binding Path=SelectedIon.Value}"
                                        DataType="{x:Type model:MappedIon}"
                                        HorizontalProperty=""
                                        VerticalProperty="Intensity"
                                        LineThickness="1">
                        <chart:VerticalLine.LineBrush>
                            <design:ConstantBrushMapper Brush="Red"/>
                        </chart:VerticalLine.LineBrush>
                    </chart:VerticalLine>
                    <TextBlock Margin="4" HorizontalAlignment="Right">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Cycle ID: {0} Scan time: {1:F3}">
                                <Binding Path="SelectedItem.ID" ElementName="pimap"/>
                                <Binding Path="SelectedItem.Time" ElementName="pimap"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </Border>
            <chart:VerticalAxisControl VerticalAxis="{Binding Path=IntensityMapDegreeAxis}"
                                       TickPlacement="Left"
                                       LayoutTransform="{StaticResource rotateRight}"
                                       Grid.Column="4" Grid.Row="3"/>
            <chart:HorizontalAxisControl HorizontalAxis="{Binding Path=IntensityMapVerticalAxis}"
                                         FlippedX="True"
                                         LayoutTransform="{StaticResource rotateRight}"
                                         Grid.Column="3" Grid.Row="2"/>

            <GridSplitter Style="{StaticResource HorizontalSplitter}"
                          Grid.Column="1" Grid.Row="0"/>
            <GridSplitter Style="{StaticResource VerticalSplitter}"
                          ResizeBehavior="PreviousAndNext"
                          Grid.Column="2" Grid.Row="1"/>
            <GridSplitter Style="{StaticResource HorizontalSplitter}"
                          Grid.Column="1" Grid.Row="2"/>
            <GridSplitter Style="{StaticResource VerticalSplitter}"
                          Grid.Column="2" Grid.Row="3"/>
            <GridSplitter Style="{StaticResource HorizontalSplitter}"
                          ResizeBehavior="PreviousAndNext"
                          Grid.Column="3" Grid.Row="2"/>
            <GridSplitter Style="{StaticResource VerticalSplitter}"
                          Grid.Column="4" Grid.Row="3"/>
        </Grid>
        
        <chart:MultiChart GraphTitle="Raw spectrum vs. Reference spectrum"
                          HorizontalAxis="{Binding MsSpectrumViewModel.HorizontalAxis.Value}"
                          VerticalTitles="{Binding Path=MsSpectrumViewModel.VerticalTitles.Value}"
                          HorizontalTitle="{Binding Path=MsSpectrumViewModel.HorizontalTitle.Value}"
                          RenderAreaControlState="{StaticResource DisableMove}"
                          Style="{StaticResource VerticalConcatChart}"
                          Grid.Row="0" Grid.Column="1">
            <Grid core:ChartBaseControl.VerticalAxis="{Binding MsSpectrumViewModel.UpperVerticalAxisItem.Value.AxisManager}">
                <chart:LineSpectrumControlSlim ItemsSource="{Binding MsSpectrumViewModel.UpperSpectraViewModel[0].MsSpectrum.Value.Spectrum}"
                                               DataType="{x:Type components:SpectrumPeak}"
                                               HorizontalProperty="Mass"
                                               VerticalProperty="Intensity"
                                               LineBrush="{StaticResource brush}"
                                               LineThickness="2">
                    <chart:LineSpectrumControlSlim.ToolTip>
                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}"
                                 d:DataContext="{d:DesignInstance Type={x:Type chart:LineSpectrumControlSlim}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    <Run FontStyle="Italic">m/z</Run>: 
                                </TextBlock> 
                                <TextBlock Text="{Binding FocusedItem.Mass}"/>
                                <TextBlock Text=" Intensity: "/>
                                <TextBlock Text="{Binding FocusedItem.Intensity}"/>
                            </StackPanel>
                        </ToolTip>
                    </chart:LineSpectrumControlSlim.ToolTip>
                </chart:LineSpectrumControlSlim>
                <chart:Annotator ItemsSource="{Binding MsSpectrumViewModel.UpperSpectraViewModel[0].MsSpectrum.Value.Spectrum}"
                                 HorizontalPropertyName="Mass"
                                 VerticalPropertyName="Intensity"
                                 LabelPropertyName="Mass"
                                 OrderingPropertyName="Intensity"
                                 Brush="Black"
                                 Overlap="Horizontal,Direct"
                                 Format="F4"
                                 ClipToBounds="True"/>
                <AdornerDecorator>
                    <chart:RangeSelector Background="Transparent"
                                         SelectedRange="{Binding Path=SelectedMzRange.Value, Mode=TwoWay}"
                                         ClipToBounds="True"/>
                </AdornerDecorator>
            </Grid>
            <Grid core:ChartBaseControl.VerticalAxis="{Binding MsSpectrumViewModel.LowerVerticalAxisItem.Value.AxisManager}"
                  core:ChartBaseControl.FlippedY="False">
                <chart:LineSpectrumControlSlim ItemsSource="{Binding MsSpectrumViewModel.LowerSpectrumViewModel.MsSpectrum.Value.Spectrum}"
                                               DataType="{x:Type components:SpectrumPeak}"
                                               HorizontalProperty="Mass"
                                               VerticalProperty="Intensity"
                                               LineBrush="{StaticResource brush}"
                                               LineThickness="2">
                    <chart:LineSpectrumControlSlim.ToolTip>
                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}"
                                 d:DataContext="{d:DesignInstance Type={x:Type chart:LineSpectrumControlSlim}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    <Run FontStyle="Italic">m/z</Run>: 
                                </TextBlock> 
                                <TextBlock Text="{Binding FocusedItem.Mass}"/>
                                <TextBlock Text=" Intensity: "/>
                                <TextBlock Text="{Binding FocusedItem.Intensity}"/>
                            </StackPanel>
                        </ToolTip>
                    </chart:LineSpectrumControlSlim.ToolTip>
                </chart:LineSpectrumControlSlim>
                <chart:Annotator ItemsSource="{Binding MsSpectrumViewModel.LowerSpectrumViewModel.MsSpectrum.Value.Spectrum}"
                                 HorizontalPropertyName="Mass"
                                 VerticalPropertyName="Intensity"
                                 LabelPropertyName="Mass"
                                 OrderingPropertyName="Intensity"
                                 ContentAlignment="BottomCenter"
                                 Brush="Black"
                                 Overlap="Horizontal,Direct"
                                 Format="F4"
                                 ClipToBounds="True"/>
            </Grid>
        </chart:MultiChart>

        <GridSplitter HorizontalAlignment="Left"
                      Width="3"
                      Background="Gray"
                      Grid.Column="1"/>

        <Button Content="Load" Command="{Binding LoadProductIonsMapCommand, Mode=OneTime}" Grid.Row="1" Grid.Column="1"/>
    </Grid>
</UserControl>
