<UserControl x:Class="CompMs.App.Msdial.View.Dims.DimsAlignmentSpotTableView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Dims"
             xmlns:searchvm="clr-namespace:CompMs.App.Msdial.ViewModel.Search"
             xmlns:rs="clr-namespace:CompMs.Graphics.UI.RangeSlider;assembly=ChartDrawing"
             xmlns:chart="clr-namespace:CompMs.App.Msdial.View.Chart"
             xmlns:converter="clr-namespace:CompMs.App.Msdial.ViewModel.Converter"
             xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
             xmlns:commonmvvm="clr-namespace:CompMs.CommonMVVM;assembly=CommonMVVM"
             xmlns:dataobj="clr-namespace:CompMs.MsdialCore.DataObj;assembly=MsdialCore"
             d:DataContext="{d:DesignInstance Type=vm:DimsAlignmentSpotTableViewModel}"
             d:DesignHeight="450" d:DesignWidth="1200">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converter:BarItemCollectionToSmallClassBarChartViewModel x:Key="CollectionToViewModel"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding SetUnknownCommand}" Gesture="Ctrl+D"/>
        <KeyBinding Command="{Binding UndoManagerViewModel.UndoCommand}" Gesture="Ctrl+Z"/>
        <KeyBinding Command="{Binding UndoManagerViewModel.RedoCommand}" Gesture="Ctrl+Y"/>
        <KeyBinding Command="{Binding SwitchTagCommand}" CommandParameter="{x:Static dataobj:PeakSpotTag.CONFIRMED}" Gesture="Ctrl+1"/>
        <KeyBinding Command="{Binding SwitchTagCommand}" CommandParameter="{x:Static dataobj:PeakSpotTag.LOW_QUALITY_SPECTRUM}" Gesture="Ctrl+2"/>
        <KeyBinding Command="{Binding SwitchTagCommand}" CommandParameter="{x:Static dataobj:PeakSpotTag.MISANNOTATION}" Gesture="Ctrl+3"/>
        <KeyBinding Command="{Binding SwitchTagCommand}" CommandParameter="{x:Static dataobj:PeakSpotTag.COELUTION}" Gesture="Ctrl+4"/>
        <KeyBinding Command="{Binding SwitchTagCommand}" CommandParameter="{x:Static dataobj:PeakSpotTag.OVERANNOTATION}" Gesture="Ctrl+5"/>
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="50"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Margin="5" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="210"/>
            </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

            <StackPanel Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Num of rows:"/>
                    <TextBlock Text="{Binding PeakSpotsView.Count}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="0,0,2,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button IsEnabled="False"/>
                    <Button IsEnabled="False"/>
                    <Button IsEnabled="False"/>
                    <Button IsEnabled="False"/>
                    <Button IsEnabled="False"/>
                </StackPanel>
            </StackPanel>

            <ItemsControl ItemsSource="{Binding PeakSpotNavigatorViewModel.KeywordFilterViewModels, Mode=OneTime}"
                          Grid.Column="1">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type searchvm:KeywordFilterViewModel}">
                        <StackPanel Margin="5,0,0,0">
                            <TextBlock Text="{Binding Label, Mode=OneTime}"/>
                            <TextBox Text="{Binding Keywords.Value, UpdateSourceTrigger=PropertyChanged}"
                                     HorizontalAlignment="Stretch"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl ItemsSource="{Binding PeakSpotNavigatorViewModel.ValueFilterViewModels, Mode=OneTime}"
                          Grid.Column="2">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type searchvm:ValueFilterViewModel}">
                        <rs:RangeSlider Tag="{Binding Label, Mode=OneTime}"
                                        Minimum="{Binding Minimum.Value, Mode=OneWay}"
                                        Maximum="{Binding Maximum.Value, Mode=OneWay}"
                                        LowerValue="{Binding Lower.Value, Mode=TwoWay}"
                                        UpperValue="{Binding Upper.Value, Mode=TwoWay}"
                                        Style="{StaticResource EditableRangeSlider}"
                                        Margin="8,0"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <StackPanel Orientation="Horizontal"
                        Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                <ContentControl Content="{Binding PeakSpotNavigatorViewModel.TagSearchBuilderViewModel}"
                                ContentTemplate="{StaticResource FilteringPeakSpotTag}"/>
                <Button Content="Mark all as confirmed"
                        Command="{Binding MarkAllAsConfirmedCommand, Mode=OneTime, FallbackValue={x:Static commonmvvm:NeverCommand.Instance}}"
                        Margin="8,0"
                        VerticalAlignment="Center" HorizontalAlignment="Left"
                        Width="128"/>
                <Button Content="Mark all as unconfirmed"
                        Command="{Binding MarkAllAsUnconfirmedCommand, Mode=OneTime, FallbackValue={x:Static commonmvvm:NeverCommand.Instance}}"
                        Margin="8,0"
                        VerticalAlignment="Center" HorizontalAlignment="Left"
                        Width="128"/>
            </StackPanel>
        </Grid>

        <DataGrid x:Name="PeakSpotView"
                  ItemsSource="{Binding PeakSpotsView, Mode=OneWay}"
                  SelectedItem="{Binding Target.Value, Mode=TwoWay}"
                  IsSynchronizedWithCurrentItem="True"
                  CanUserAddRows="False" CanUserDeleteRows="False"
                  CanUserReorderColumns="False" CanUserSortColumns="True"
                  SelectionUnit="FullRow"
                  HeadersVisibility="All"
                  AutoGenerateColumns="False"
                  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                  Unloaded="DataGrid_Unloaded"
                  SelectionChanged="PeakSpotView_SelectionChanged"
                  behavior:DataGridPasteBehavior.Enable="True"
                  behavior:DataGridCommitBehavior.Enable="True"
                  behavior:DataGridScrollToSelectionBehavior.Enable="True"
                  behavior:DataGridIsEdittingBehavior.IsEditting="{Binding PeakSpotNavigatorViewModel.IsEditting.Value, Mode=OneWayToSource}"
                  Grid.Row="1">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Save matched spectra at each current peak spot" Command="{Binding ExportMatchedSpectraCommand, Mode=OneTime}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <commonmvvm:BindingProxy x:Key="TableVM" Data="{Binding Mode=OneTime}"/>
            </DataGrid.Resources>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="ID"
                                    Binding="{Binding Path=AlignmentID}"
                                    IsReadOnly="True" 
                                    Width="50" />
                <DataGridTextColumn Header="m/z"
                                    Binding="{Binding Path=MassCenter, StringFormat=F4}"
                                    IsReadOnly="True"
                                    Width="70" />
                <DataGridTextColumn Header="Type"
                                    Binding="{Binding Path=AdductType, Converter={StaticResource AdductIonConverter}}"
                                    Width="*"/>
                <DataGridTextColumn Header="Fill %"
                                    Binding="{Binding Path=FillPercentage, StringFormat=F2}"
                                    IsReadOnly="True"
                                    Width="50" />
                <DataGridTextColumn Header="Metabolite name"
                                    Binding="{Binding Path=Name}"
                                    IsReadOnly="False"
                                    Width="2*" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Ontology"
                                    Binding="{Binding Path=Ontology}"
                                    Width="1.5*" />
                <DataGridTextColumn Header="Comment"
                                    Binding="{Binding Path=Comment}"
                                    IsReadOnly="False"
                                    Width="2*" />
                <DataGridTemplateColumn Header="Tag"
                                        Width="Auto"
                                        CellTemplate="{StaticResource EditPeakSpotTag}"/>
                <DataGridTextColumn Header="Annotation method"
                                    Binding="{Binding Path=AnnotatorID}"
                                    IsReadOnly="True"
                                    Width="120"/>
                <DataGridTextColumn Header="Match score"
                                    Binding="{Binding Path=ScanMatchResult.TotalScore, StringFormat=F4}"
                                    IsReadOnly="True"
                                    Width="70" />
                <DataGridTextColumn Header="S/N"
                                    Binding="{Binding Path=SignalToNoiseAve, StringFormat=F1}"
                                    IsReadOnly="True"
                                    Width="1*" />
                <DataGridTextColumn Header="ANOVA&#13;P-value"
                                    Width="80"
                                    Binding="{Binding Path=AnovaPvalue, StringFormat=0.00E00}"
                                    IsReadOnly="True" />
                <DataGridTextColumn Header="Fold change&#13;(Max/Min)"
                                    Width="80"
                                    Binding="{Binding Path=FoldChange, StringFormat=F2}"
                                    IsReadOnly="True" />
                <DataGridTemplateColumn Header="BarChart"
                                        Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <chart:SmallClassBarChart ClassBrush="{Binding DataContext.ClassBrush.Value, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                                <chart:SmallClassBarChart.DataContext>
                                    <MultiBinding Converter="{StaticResource CollectionToViewModel}">
                                        <Binding/>
                                        <Binding Path="(DataGrid.DataContext).(vm:DimsAlignmentSpotTableViewModel.BarItemsLoader)" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                        <Binding Path="(DataGrid.DataContext).(vm:DimsAlignmentSpotTableViewModel.FileClassPropertiesModel)" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                    </MultiBinding>
                                </chart:SmallClassBarChart.DataContext>
                            </chart:SmallClassBarChart>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
    </Grid>
</UserControl>
