<UserControl x:Class="CompMs.App.Msdial.View.Setting.AlignmentParameterSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:enum="clr-namespace:CompMs.Common.Enum;assembly=Common"
             xmlns:ui="clr-namespace:CompMs.Graphics.UI;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Setting"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type={x:Type vm:AlignmentParameterSettingViewModel}}"
             d:Background="White"
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <GroupBox BorderThickness="0" Margin="8,0" Grid.Row="0">
            <GroupBox.Header>
                <CheckBox VerticalContentAlignment="Center"
                          IsChecked="{Binding ShouldRunAlignment.Value}"
                          IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}">
                    <Label Content="Alignment parameters setting" FontStyle="Italic"/>
                </CheckBox>
            </GroupBox.Header>
            <StackPanel  Margin="16,0">
                <StackPanel.Resources>
                    <Style TargetType="ui:LabeledContent" BasedOn="{StaticResource AlignedContent}">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </StackPanel.Resources>

                <ui:LabeledContent PrependLabel="Result name:">
                    <TextBox Text="{Binding AlignmentResultFileName.Value}"
                             d:Text="Result file name"
                             IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                             ToolTip="Decide an alignment file name"
                             Style="{StaticResource ResourceKey=ToolTipErrorStyle}"
                             Height="24"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Right"/>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="Reference file:">
                    <ComboBox ItemsSource="{Binding AnalysisFiles}"
                              SelectedItem="{Binding ReferenceFile.Value}"
                              DisplayMemberPath="AnalysisFileName"
                              SelectedIndex="0"
                              IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                              Height="24"
                              VerticalContentAlignment="Center" />
                </ui:LabeledContent>

                <ItemsControl ItemsSource="{Binding EqualityParameterSettings}">
                    <ItemsControl.Resources>
                        <Style TargetType="TextBox" BasedOn="{StaticResource ToolTipErrorStyle}">
                            <Setter Property="Height" Value="24"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        </Style>
                        <DataTemplate DataType="{x:Type vm:RetentionTimeEqualityParameterSettingViewModel}">
                            <ui:LabeledContent PrependLabel="Retention time tolerance:"
                                               AppendLabel="min">
                                <TextBox Text="{Binding Tolerance.Value}"
                                         d:Text="0.5"
                                         IsReadOnly="{Binding DataContext.IsReadOnly, Mode=OneTime, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                         ToolTip="At least for ODS column, 0.05-0.1 is better."/>
                            </ui:LabeledContent>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:DriftTimeEqualityParameterSettingViewModel}">
                            <ui:LabeledContent PrependLabel="Drift time tolerance:"
                                               AppendLabel="1/k0">
                                <TextBox Text="{Binding Tolerance.Value}"
                                         d:Text="10"
                                         IsReadOnly="{Binding DataContext.IsReadOnly, Mode=OneTime, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                            </ui:LabeledContent>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:Ms1EqualityParameterSettingViewModel}">
                            <ui:LabeledContent PrependLabel="MS1 tolerance:"
                                               AppendLabel="Da">
                                <TextBox Text="{Binding Tolerance.Value}"
                                         d:Text="0.01"
                                         IsReadOnly="{Binding DataContext.IsReadOnly, Mode=OneTime, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                         ToolTip="At least for QTOF, 0.01-0.025 is better."/>
                            </ui:LabeledContent>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </StackPanel>
        </GroupBox>

        <Expander Header="Advanced"
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" 
                  ExpandDirection="Down"
                  Grid.Row="1"
                  d:IsExpanded="True">

            <StackPanel Margin="24,0">
                <StackPanel.Resources>
                    <Style TargetType="ui:LabeledContent" BasedOn="{StaticResource AlignedContent}">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </StackPanel.Resources>
                <ItemsControl ItemsSource="{Binding EqualityParameterSettings}">
                    <ItemsControl.Resources>
                        <Style TargetType="TextBox" BasedOn="{StaticResource ToolTipErrorStyle}">
                            <Setter Property="Height" Value="24"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        </Style>
                        <DataTemplate DataType="{x:Type vm:RetentionTimeEqualityParameterSettingViewModel}">
                            <ui:LabeledContent PrependLabel="Retention time factor:"
                                               AppendLabel="(0-1)">
                                <TextBox Text="{Binding Factor.Value}"
                                         d:Text="1"
                                         IsReadOnly="{Binding DataContext.IsReadOnly, Mode=OneTime, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                         ToolTip="At least for ODS column, 0.5 is good."/>
                            </ui:LabeledContent>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:DriftTimeEqualityParameterSettingViewModel}">
                            <ui:LabeledContent PrependLabel="Drift time factor:"
                                               AppendLabel="(0-1)">
                                <TextBox Text="{Binding Factor.Value}"
                                         d:Text="1"
                                         IsReadOnly="{Binding DataContext.IsReadOnly, Mode=OneTime, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                            </ui:LabeledContent>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:Ms1EqualityParameterSettingViewModel}">
                            <ui:LabeledContent PrependLabel="MS1 factor:"
                                               AppendLabel="(0-1)">
                                <TextBox Text="{Binding Factor.Value}"
                                         d:Text="1"
                                         IsReadOnly="{Binding DataContext.IsReadOnly, Mode=OneTime, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                         ToolTip="At least for QTOF column, 0.5-0.7 is good."/>
                            </ui:LabeledContent>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>

                <ui:LabeledContent PrependLabel="Peak count filter:"
                                   AppendLabel="%">
                    <TextBox Style="{StaticResource ResourceKey=ToolTipErrorStyle}"
                             Text="{Binding PeakCountFilter.Value}"
                             d:Text="1"
                             IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                             ToolTip="Aligned peaks which are less than this parameter will be removed from the final result."
                             Height="24"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Right"/>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="N% detected in at least one group:"
                                   AppendLabel="%">
                    <TextBox Name="TextBox_NpercentDetectedInOneGroup" 
                             Text="{Binding NPercentDetectedInOneGroup.Value}"
                             d:Text="0.5"
                             IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                             Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                             ToolTip="Present in at least n% of samples in at least one sample group."
                             Height="24"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Right"/>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="Remove features based on blank information:">
                    <CheckBox IsChecked="{Binding Path=IsRemoveFeatureBasedOnBlankPeakHeightFoldChange.Value}"
                              IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                              Height="24"
                              VerticalContentAlignment="Center"/>
                </ui:LabeledContent>

                <Grid Height="30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox SelectedValue="{Binding BlankFiltering.Value}"
                              SelectedValuePath="DataContext"
                              IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                              ToolTip="Select the filtering criterion."
                              HorizontalContentAlignment="Left" HorizontalAlignment="Stretch"
                              Height="24" Margin="0,0,8,0"
                              Grid.Column="0">
                        <ComboBox.ItemsSource>
                            <x:Array Type="ContentControl">
                                <ContentControl Content="Sample max / blank average: " DataContext="{x:Static enum:BlankFiltering.SampleMaxOverBlankAve}"/>
                                <ContentControl Content="Sample average / blank average: " DataContext="{x:Static enum:BlankFiltering.SampleAveOverBlankAve}"/>
                            </x:Array>
                        </ComboBox.ItemsSource>
                    </ComboBox>
                    <TextBox Style="{StaticResource ResourceKey=ToolTipErrorStyle}"
                             Text="{Binding FoldChangeForBlankFiltering.Value}"
                             IsEnabled="{Binding Path=IsRemoveFeatureBasedOnBlankPeakHeightFoldChange.Value}"
                             IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                             d:Text="5"
                             VerticalContentAlignment="Center" 
                             HorizontalContentAlignment="Right" 
                             Height="24"
                             Grid.Column="1">
                        <ToolTipService.ToolTip>
                            <TextBlock>
                                  1. For instance, if a fold-change of 10 is used: for an average peak height over all samples (or max. value in all samples) of 10,000 
                                <LineBreak /> 
                                     and an average peak height in blanks of 500, the fold-change 10,000/500 = 20 means that this feature stays in the data set.
                                <LineBreak /> 
                                  2. Users must specify in File property setting -> File type which files are blanks and actual samples.
                                <LineBreak /> 
                                     if more blanks are available, an average value would be used for calculation.
                                <LineBreak /> 
                                  3. If in blanks all values are zero (even after gap filling), 1/10 of minimal peak height over all samples is used.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </TextBox>
                    <Label Content="fold change" VerticalContentAlignment="Center" Grid.Column="2"/>
                </Grid>

                <ui:LabeledContent PrependLabel="Keep 'reference matched' metabolite features:"
                                   IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}">
                    <CheckBox HorizontalAlignment="Left" VerticalAlignment="Center" 
                              IsEnabled="{Binding Path=IsRemoveFeatureBasedOnBlankPeakHeightFoldChange.Value}"
                              IsChecked="{Binding Path=IsKeepRefMatchedMetaboliteFeatures.Value}"
                              VerticalContentAlignment="Center"
                              Height="24">
                        <ToolTipService.ToolTip>
                            <TextBlock>
                                  This would allow the user to retain their, for example, internal standards before removing all features 
                                <LineBreak /> 
                                  that are not at least x-fold greater intensity in the samples than in the blanks.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </CheckBox>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="Keep 'suggested (w/o MS2)' metabolite features: "
                                   IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}">
                    <CheckBox HorizontalAlignment="Left"
                              IsEnabled="{Binding Path=IsRemoveFeatureBasedOnBlankPeakHeightFoldChange.Value}"
                              IsChecked="{Binding Path=IsKeepSuggestedMetaboliteFeatures.Value}"
                              VerticalContentAlignment="Center"
                              Height="24">
                        <ToolTipService.ToolTip>
                            <TextBlock>
                                  This would allow the user to retain their, for example, internal standards before removing all features 
                                <LineBreak /> 
                                  that are not at least x-fold greater intensity in the samples than in the blanks.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </CheckBox>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="Keep removable features and assign the tag: "
                                   IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}">
                    <CheckBox HorizontalAlignment="Left"
                              IsEnabled="{Binding Path=IsRemoveFeatureBasedOnBlankPeakHeightFoldChange.Value}"
                              IsChecked="{Binding Path=IsKeepRemovableFeaturesAndAssignedTagForChecking.Value}"
                              VerticalContentAlignment="Center"
                              Height="24">
                        <ToolTipService.ToolTip>
                            <TextBlock>
                                  All features are kept even if the filtering is applied, but users can check if the feature is satisfied with the blank checking or not.
                                <LineBreak /> 
                                  Moreover, users can export the alignment result by the filtering options.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </CheckBox>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="Gap filling by compulsion:">
                    <CheckBox IsChecked="{Binding Path=IsForceInsertForGapFilling.Value}"
                              IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                              HorizontalAlignment="Left"
                              ToolTip="Ad hoc peak area is forcibly detected within +- 5 data points even if there is no local maximum. "
                              VerticalContentAlignment="Center"
                              Height="24"/>
                </ui:LabeledContent>

                <ui:LabeledContent PrependLabel="Do alignment for ref.matched peaks only:">
                    <CheckBox IsChecked="{Binding Path=UseRefMatchedPeaksOnly.Value}"
                              IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                              HorizontalAlignment="Left"
                              ToolTip="Alignment is performed for peaks annotated. "
                              VerticalContentAlignment="Center"
                              Height="24"/>
                </ui:LabeledContent>
            </StackPanel>
        </Expander>
    </Grid>
</UserControl>
