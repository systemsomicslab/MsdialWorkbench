<UserControl x:Class="CompMs.App.Msdial.View.Setting.DatasetFileSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CompMs.App.Msdial.View.Setting"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Setting"
             xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
             xmlns:common="clr-namespace:CompMs.Common.Enum;assembly=Common"
             mc:Ignorable="d"
             d:Background="White"
             d:DataContext="{d:DesignInstance Type={x:Type vm:DatasetFileSettingViewModel}}"
             d:Width="800" d:Height="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ToolTipErrorStyleDataGrid" TargetType="{x:Type DataGrid}">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                        <Setter Property="BorderBrush" Value="Pink" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ObjectDataProvider x:Key="FileType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="common:AnalysisFileType"/>
                </ObjectDataProvider.MethodParameters>       
            </ObjectDataProvider>

            <x:Array x:Key="AcquisitionTypes" Type="{x:Type common:AcquisitionType}">
                <common:AcquisitionType>DDA</common:AcquisitionType>
                <common:AcquisitionType>SWATH</common:AcquisitionType>
                <common:AcquisitionType>AIF</common:AcquisitionType>
            </x:Array>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal"
                    Grid.Row="0">
            <Label Content="Analysis file paths" HorizontalAlignment="Left" VerticalAlignment="Center" Height="24" Margin="8,0"/>
            <Button x:Name="Button_AnalysisFilePathsSelect" Content="Browse"
                    Command="{x:Static local:DatasetFileSettingView.OpenDialogCommand}"
                    IsEnabled="{Binding IsReadOnly, Converter={StaticResource NegativeConverter}}"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Height="24" Width="64" Margin="8,0"
                    Grid.Row="0">
                <ToolTipService.ToolTip>
                    <ToolTip Content="Select analysis files (now abf format only). Here, you have the only chance to change the name of your samples. You should change the type of samples especially for quality control samples which are also utilized for peak alignment. The remaining properties including Class ID, Analytical order, and Included can be changed after data processing." />
                </ToolTipService.ToolTip>
            </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Grid.Row="0">
            <ComboBox ItemsSource="{Binding Source={StaticResource AcquisitionTypes}}"
                      SelectedItem="{Binding SelectedAcquisitionType.Value, Mode=TwoWay}"
                      VerticalContentAlignment="Center"
                      Width="80">
                <ComboBox.ToolTip>
                    <TextBlock>
                        DDA: When you analyze a data set from data dependent MS/MS, select this option.<LineBreak />
                        SWATH, AIF: When you analyze a data set from data independent MS/MS, select this option.
                    </TextBlock>  
                </ComboBox.ToolTip>
            </ComboBox>
            <Button Content="Set to all"
                    Command="{Binding SetSelectedAcquisitionTypeCommand, Mode=OneTime}"
                    Padding="4"
                    Margin="8,0"/>
        </StackPanel>
        
        <DataGrid ClipboardCopyMode="IncludeHeader" x:Name="Datagrid_AnalysisFileProperties" Style="{StaticResource ResourceKey=ToolTipErrorStyleDataGrid}" 
                  ItemsSource="{Binding Path=AnalysisFilePropertyCollection, UpdateSourceTrigger=PropertyChanged}" 
                  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True" 
                  AutoGenerateColumns="False" SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                  AllowDrop="True" Margin="16,8"
                  IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                  Drop="ExecuteDrop"
                  behavior:DataGridPasteBehavior.Enable="True"
                  Grid.Row="1" >
            
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            
            <DataGrid.Columns>
                <DataGridTemplateColumn SortMemberPath="AnalysisFilePath.Value" Width="2*" Header="File path" IsReadOnly="True" ClipboardContentBinding="{Binding Path=AnalysisFilePath.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Style="{StaticResource ResourceKey=ToolTipErrorStyle}" Text="{Binding Path=AnalysisFilePath.Value}" VerticalContentAlignment="Center" IsReadOnly="True" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn SortMemberPath="AnalysisFileName.Value" Width="1*" Header="File name" IsReadOnly="False" ClipboardContentBinding="{Binding Path=AnalysisFileName.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_FileName" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=AnalysisFileName.Value, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_FileName}">
                                <TextBox Name="TextBox_FileName" Text="{Binding AnalysisFileName.Value, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>

                </DataGridTemplateColumn>

                <DataGridComboBoxColumn Width="100" Header="Type" ItemsSource="{Binding Source={StaticResource FileType}}" 
                                        SelectedItemBinding="{Binding Path=AnalysisFileType.Value}"
                                        ClipboardContentBinding="{Binding Path=AnalysisFileType.Value}" />

                <DataGridTemplateColumn Width="0.8*" Header="Class ID" IsReadOnly="False" ClipboardContentBinding="{Binding Path=AnalysisFileClass.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_FileClass"
                                     Style="{StaticResource ResourceKey=ToolTipErrorStyle}"
                                     Text="{Binding Path=AnalysisFileClass.Value, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                     VerticalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_FileClass}">
                                <TextBox Name="TextBox_FileClass" Text="{Binding AnalysisFileClass.Value, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource AcquisitionTypes}}"
                                        Header="Acquisiotion type"
                                        SelectedItemBinding="{Binding Path=AcquisitionType.Value}"
                                        SortMemberPath="AcquisitionType.Value"
                                        Width="80"
                                        ClipboardContentBinding="{Binding Path=AcquisitionType.Value}">
                    <DataGridComboBoxColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock>
                                        DDA:<LineBreak />
                                        When you analyze a data set from data dependent MS/MS, select this option.
                                        SWATH, AIF:<LineBreak />
                                        When you analyze a data set from data independent MS/MS, select this option. <LineBreak />
                                    </TextBlock>  
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridComboBoxColumn.CellStyle>
                </DataGridComboBoxColumn>
                
                <DataGridTemplateColumn SortMemberPath="AnalysisBatch.Value" Width="0.5*" Header="Batch" IsReadOnly="False" ClipboardContentBinding="{Binding Path=AnalysisBatch.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_AnalyticalBatch" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=AnalysisBatch.Value, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn SortMemberPath="AnalysisFileAnalyticalOrder.Value" Width="1*" Header="Analytical order" IsReadOnly="False" ClipboardContentBinding="{Binding Path=AnalysisFileAnalyticalOrder.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_AnalyticalOrder" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=AnalysisFileAnalyticalOrder.Value, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_AnalyticalOrder}">
                                <TextBox Name="TextBox_AnalyticalOrder" Text="{Binding AnalysisFileAnalyticalOrder.Value, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn SortMemberPath="AnalysisFileDilutionFactor.Value" Width="1*" 
                                        Header="Factor" IsReadOnly="False" ClipboardContentBinding="{Binding Path=DilutionFactor.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_DilutionFactor" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=DilutionFactor.Value, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                     ToolTipService.ToolTip="Multiply this value after Normalization is performed."/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_DilutionFactor}">
                                <TextBox Name="TextBox_DilutionFactor" Text="{Binding DilutionFactor.Value, UpdateSourceTrigger=PropertyChanged}"
                                         ToolTipService.ToolTip="Multiply this value after Normalization is performed."/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="0.7*" Header="Included" ClipboardContentBinding="{Binding Path=AnalysisFileIncluded.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=AnalysisFileIncluded.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource NegativeConverter}}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

        <TextBox Text="{Binding SupportingMessage.Value, Mode=OneWay}"
                 TextWrapping="WrapWithOverflow"
                 Foreground="DeepPink"
                 Style="{StaticResource ReadOnlyTextBox}"
                 Margin="8,0"
                 Grid.Row="2"/>
    </Grid>
</UserControl>
