<UserControl x:Class="CompMs.App.Msdial.View.Chart.CheckChromatogramsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CompMs.App.Msdial.View.Chart"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Chart"
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:ui="clr-namespace:CompMs.Graphics.UI;assembly=ChartDrawing"
             xmlns:graphio="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
             xmlns:do="clr-namespace:CompMs.App.Msdial.Model.DataObj"
             xmlns:mvvm="clr-namespace:CompMs.CommonMVVM;assembly=CommonMVVM"
             xmlns:msResult="clr-namespace:CompMs.App.Msdial.ViewModel.MsResult"
             x:Name="ChromatogramsView"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type={x:Type vm:CheckChromatogramsViewModel}}"
             d:Background="White"
             d:DesignHeight="450" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/ChartStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="InputErrorTemplate">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                    <AdornedElementPlaceholder/>
                </DockPanel>
            </ControlTemplate>

            <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                        <Setter Property="BorderBrush" Value="Pink" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ToolTipErrorStyleDataGrid" TargetType="{x:Type DataGrid}">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                        <Setter Property="BorderBrush" Value="Pink" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <chart:RenderAreaControlState x:Key="DisableMove" MoveByDragIsEnabled="False"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <mvvm:BindingProxy x:Key="ViewRoot" Data="{Binding ElementName=ChromatogramsView}"/>
            <mvvm:BindingProxy x:Key="ContentsProxy" Data="{Binding ElementName=Contents}"/>
            <graphio:SaveImageAsCommand x:Key="SaveImageCommand" Format="Png">
                <graphio:SaveImageAsCommand.Converter>
                    <graphio:HeaderConverter Header="{Binding Data.DataContext.FileModel.AnalysisFileName, Source={StaticResource ViewRoot}}"/>
                </graphio:SaveImageAsCommand.Converter>
            </graphio:SaveImageAsCommand>
            <graphio:CopyImageAsCommand x:Key="CopyImageCommand" Format="Png">
                <graphio:CopyImageAsCommand.Converter>
                    <graphio:HeaderConverter Header="{Binding Data.DataContext.FileModel.AnalysisFileName, Source={StaticResource ViewRoot}}"/>
                </graphio:CopyImageAsCommand.Converter>
            </graphio:CopyImageAsCommand>
        </Grid.Resources>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Save view image as...">
                    <MenuItem Header="Save as emf"
                              Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                    <MenuItem Header="Save as png"
                              Command="{StaticResource SaveImageCommand}"
                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                </MenuItem>
                <MenuItem Header="Copy view image as...">
                    <MenuItem Header="Copy as emf"
                              Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                    <MenuItem Header="Copy as png"
                              Command="{StaticResource CopyImageCommand}"
                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Save current layout"
                          Command="{Binding SerializeLayoutCommand, Mode=OneTime}"
                          CommandParameter="{Binding Data.Containers, Source={StaticResource ContentsProxy}}"/>
                <!--
                <MenuItem Header="Load previous layout"
                          Command="{Binding DeserializeLayoutCommand, Mode=OneTime}"/>
                -->
            </ContextMenu>
        </Grid.ContextMenu>
        <ui:DockItemsControl x:Name="Contents" ItemsSource="{Binding ViewModels, Mode=OneTime}" LayoutElement="{Binding Layout.Value, Mode=OneWay}">
            <ui:DockItemsControl.ItemTemplate>
                <DataTemplate>
                    <ContentPresenter Content="{Binding Title}"/>
                </DataTemplate>
            </ui:DockItemsControl.ItemTemplate>
            <ui:DockItemsControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type vm:ChromatogramViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="160" />
                                    </Grid.ColumnDefinitions>
                                    <chart:SimpleChartControl HorizontalAxis="{Binding ChromatogramsViewModel.Value.HorizontalSelector.SelectedAxisItem.AxisManager}"
                                                              VerticalAxis="{Binding ChromatogramsViewModel.Value.VerticalSelector.SelectedAxisItem.AxisManager}"
                                                              HorizontalTitle="{Binding ChromatogramsViewModel.Value.HorizontalSelector.SelectedAxisItem.GraphLabel}"
                                                              GraphTitle="{Binding ChromatogramsViewModel.Value.GraphTitle}"
                                                              RenderAreaControlState="{StaticResource DisableMove}"
                                                              Background="WhiteSmoke"
                                                              BorderBrush="Black">
                                        <chart:SimpleChartControl.Style>
                                            <Style TargetType="{x:Type chart:SimpleChartControl}" BasedOn="{StaticResource UnmoveBasicChart}">
                                                <Setter Property="VerticalTitle">
                                                    <Setter.Value>
                                                        <MultiBinding StringFormat="{}{0}({1})">
                                                            <MultiBinding.Bindings>
                                                                <Binding Path="ChromatogramsViewModel.Value.VerticalSelector.SelectedAxisItem.GraphLabel"/>
                                                                <Binding Path="ChromatogramsViewModel.Value.VerticalSelector.SelectedAxisItem.AxisManager.UnitLabel"/>
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ChromatogramsViewModel.Value.VerticalSelector.SelectedAxisItem.AxisManager.UnitLabel, TargetNullValue=''}" Value="">
                                                        <Setter Property="VerticalTitle" Value="{Binding ChromatogramsViewModel.Value.VerticalSelector.SelectedAxisItem.GraphLabel}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </chart:SimpleChartControl.Style>
                                        <Grid>
                                            <ItemsControl DataContext="{Binding ChromatogramsViewModel.Value}"
                                                          ItemsSource="{Binding DisplayChromatograms}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Grid/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid ClipToBounds="True">
                                                            <chart:MultiAreaChartControl ItemsSources="{Binding Peaks}"
                                                                                         CollectionDataType="{x:Type do:DisplayPeakOfChromatogram}"
                                                                                         ItemsProperty="Points"
                                                                                         ItemsDataType="{x:Type do:PeakItem}"
                                                                                         HorizontalProperty="Time"
                                                                                         VerticalProperty="Intensity"
                                                                                         AreaBrush="{Binding BrushMapper, Mode=OneWay}"
                                                                                         AreaOpacity=".2"
                                                                                         IsHitTestVisible="False"/>
                                                            <chart:LineChartControl ItemsSource="{Binding ChromatogramPeaks}"
                                                                                    LinePen="{Binding LinePen}"
                                                                                    HorizontalPropertyName="{Binding DataContext.HorizontalProperty, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                                    VerticalPropertyName="{Binding DataContext.VerticalProperty, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                            <chart:Annotator ItemsSource="{Binding Peaks}"
                                                                             HorizontalPropertyName="Time"
                                                                             VerticalPropertyName="Intensity"
                                                                             LabelPropertyName="Label"
                                                                             Overlap="Direct"
                                                                             Visibility="{Binding Data.DataContext.VisiblePeakLabel.Value, Converter={StaticResource BooleanToVisibility}, Source={StaticResource ViewRoot}}"
                                                                             IsHitTestVisible="False">
                                                                <chart:Annotator.RenderTransform>
                                                                    <TranslateTransform Y="-30"/>
                                                                </chart:Annotator.RenderTransform>
                                                            </chart:Annotator>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                            <AdornerDecorator>
                                                <chart:RangeSelector Background="Transparent"
                                                                     SelectedRange="{Binding RangeSelectableChromatogramViewModel.Value.SelectedRange.Value, Mode=TwoWay}"
                                                                     DisplayRanges="{Binding RangeSelectableChromatogramViewModel.Value.SelectedRanges, Mode=OneWay}"
                                                                     ClipToBounds="True"/>
                                            </AdornerDecorator>
                                        </Grid>
                                        <chart:SimpleChartControl.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Show ms spectrum"
                                                          Command="{Binding ShowAccumulatedMs1SpectrumCommand}"/>
                                                <MenuItem Header="Show ms/ms spectrum"
                                                          ItemsSource="{Binding AccumulatedMs2SpectrumViewModels.Value}">
                                                    <MenuItem.Resources>
                                                        <DataTemplate DataType="{x:Type msResult:AccumulatedMs2SpectrumViewModel}">
                                                            <TextBlock Text="All ms/ms"/>
                                                        </DataTemplate>
                                                        <DataTemplate DataType="{x:Type msResult:AccumulatedExtractedMs2SpectrumViewModel}">
                                                            <TextBlock>
                                                                <Run FontStyle="Italic">m/z</Run>: <Run Text="{Binding Mz, Mode=OneTime}"/>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                        <DataTemplate DataType="{x:Type msResult:AccumulatedSpecificExperimentMS2SpectrumViewModel}">
                                                            <TextBlock>
                                                                Experiment ID: <Run Text="{Binding ExperimentID, Mode=OneTime}"/>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </MenuItem.Resources>
                                                    <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="MenuItem">
                                                            <Setter Property="Command" Value="{Binding PlacementTarget.DataContext.ShowAccumulatedSpectrumCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                            <Setter Property="CommandParameter" Value="{Binding}"/>
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Header="Save image as...">
                                                    <MenuItem Header="Save as emf"
                                                              Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                                                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <MenuItem Header="Save as png"
                                                              Command="{StaticResource SaveImageCommand}"
                                                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                </MenuItem>
                                                <MenuItem Header="Copy image as...">
                                                    <MenuItem Header="Copy as emf"
                                                              Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                                                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <MenuItem Header="Copy as png"
                                                              Command="{StaticResource CopyImageCommand}"
                                                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                </MenuItem>
                                                <MenuItem Header="Save view image as...">
                                                    <MenuItem Header="Save as emf"
                                                              Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                                                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                                                    <MenuItem Header="Save as png"
                                                              Command="{StaticResource SaveImageCommand}"
                                                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                                                </MenuItem>
                                                <MenuItem Header="Copy view image as...">
                                                    <MenuItem Header="Copy as emf"
                                                              Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                                                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                                                    <MenuItem Header="Copy as png"
                                                              Command="{StaticResource CopyImageCommand}"
                                                              CommandParameter="{Binding Data, Source={StaticResource ViewRoot}}"/>
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Header="Copy as table" Command="{Binding CopyAsTableCommand, Mode=OneTime}"/>
                                                <MenuItem Header="Save as table" Command="{Binding SaveAsTableCommand, Mode=OneTime}"/>
                                            </ContextMenu>
                                        </chart:SimpleChartControl.ContextMenu>
                                    </chart:SimpleChartControl>
                                    <DockPanel Grid.Column="1">
                                        <StackPanel DataContext="{Binding RangeSelectableChromatogramViewModel.Value}"
                                                    Orientation="Horizontal"
                                                    HorizontalAlignment="Left"
                                                    DockPanel.Dock="Bottom">
                                            <Button Content="+" Command="{Binding SetMainRangeCommand, Mode=OneTime}" Width="32" Margin="4"/>
                                            <Button Content="-" Command="{Binding SetSubtractRangeCommand, Mode=OneTime}" Width="32" Margin="4"/>
                                            <Button Content="Reset" Command="{Binding RemoveRangesCommand, Mode=OneTime}" Width="64" Margin="4"/>
                                        </StackPanel>
                                        <ItemsControl DataContext="{Binding ChromatogramsViewModel.Value}"
                                                      ItemsSource="{Binding DisplayChromatograms}"
                                                      VerticalAlignment="Center">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name}" Margin="8,0" Foreground="{Binding LineBrush}" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DockPanel>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:EicSettingViewModel}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" MaxHeight="80"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="40"/>
                                    </Grid.RowDefinitions>

                                    <StackPanel>
                                        <StackPanel.Resources>
                                            <Style TargetType="CheckBox">
                                                <Setter Property="Margin" Value="8,0"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <StackPanel Orientation="Horizontal"
                                                    Margin="4">
                                            <CheckBox Content="TIC" IsChecked="{Binding InsertTic.Value}"/>
                                            <CheckBox Content="BPC" IsChecked="{Binding InsertBpc.Value}"/>
                                            <CheckBox Content="Highest peak m/z's EIC" IsChecked="{Binding InsertHighestEic.Value}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal"
                                                    Margin="4">
                                            <CheckBox Content="MS2TIC" IsChecked="{Binding InsertMS2Tic.Value}"/>
                                        </StackPanel>
                                    </StackPanel>

                                    <DataGrid ClipboardCopyMode="IncludeHeader" x:Name="Datagrid_EicDiplayProperties" Style="{StaticResource ResourceKey=ToolTipErrorStyleDataGrid}" 
                                              ItemsSource="{Binding Path=DiplayEicSettingValues, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                              behavior:DataGridPasteBehavior.Enable="True"
                                              ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" 
                                              VerticalAlignment="Stretch" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True" 
                                              AutoGenerateColumns="False" SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                                              AllowDrop="True"
                                              Margin="4"
                                              Grid.Row="1">
                                      
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>

                                            <DataGridTemplateColumn Width="1*" Header="Name" IsReadOnly="False" ClipboardContentBinding="{Binding Path=Title.Value}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Name="TextBox_EicName" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" Text="{Binding Path=Title.Value, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>

                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_EicName}">
                                                            <TextBox Name="TextBox_EicName" Text="{Binding Title.Value, UpdateSourceTrigger=PropertyChanged}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn SortMemberPath="Mass.Value" Width="1*" 
                                                                    Header="Exact mass" IsReadOnly="False" ClipboardContentBinding="{Binding Path=Mass.Value}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Name="TextBox_ExactMass" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                                                 Text="{Binding Path=Mass.Value, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>

                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_ExactMass}">
                                                            <TextBox Name="TextBox_ExactMass" Text="{Binding Mass.Value, UpdateSourceTrigger=PropertyChanged}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn SortMemberPath="MassTolerance.Value" Width="*" 
                                                                    Header="Mass tolerance [Da]" IsReadOnly="False" ClipboardContentBinding="{Binding Path=MassTolerance.Value}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Name="TextBox_MassTolerance" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                                                 Text="{Binding Path=MassTolerance.Value, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>

                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                    <DataTemplate>
                                                        <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_MassTolerance}">
                                                            <TextBox Name="TextBox_MassTolerance" Text="{Binding MassTolerance.Value, UpdateSourceTrigger=PropertyChanged}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellEditingTemplate>
                                            </DataGridTemplateColumn>

                                        </DataGrid.Columns>
                                    </DataGrid>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2">
                                        <StackPanel.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="Height" Value="24"/>
                                                <Setter Property="Width" Value="72"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Margin" Value="8,0"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button Content="Apply" Command="{Binding ApplyCommand, Mode=OneTime}"/>
                                        <Button Content="Clear" Command="{Binding ClearCommand, Mode=OneTime}"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:PeakPickViewModel}">
                                <Grid>
                                    <Grid.Resources>
                                        <mvvm:BindingProxy x:Key="RemovePeakCommand" Data="{Binding RemovePeakCommand, Mode=OneTime}"/>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal"
                                                HorizontalAlignment="Left"
                                                DockPanel.Dock="Bottom">
                                        <Button Content="Detect" Command="{Binding DetectPeaksCommand, Mode=OneTime}" Width="64" Margin="8"/>
                                        <Button Content="Manual" Command="{Binding AddPeaksCommand, Mode=OneTime}" Width="64" Margin="8"/>
                                        <Button Content="Reset" Command="{Binding ResetPeaksCommand, Mode=OneTime}" Width="64" Margin="8"/>
                                        <Button Content="Export" Command="{Binding ExportPeaksCommand, Mode=OneTime}" Width="64" Margin="8"/>
                                    </StackPanel>
                                    <CheckBox Content="Show label"
                                              IsChecked="{Binding VisiblePeakLabel.Value, Mode=TwoWay}"
                                              Grid.Row="1"/>
                                    <ScrollViewer Grid.Row="2">
                                        <ItemsControl ItemsSource="{Binding ChromatogramsViewModel.Value.DisplayChromatograms}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type do:DisplayChromatogram}">
                                                    <Expander Header="{Binding Name, Mode=OneTime}">
                                                        <ListBox ItemsSource="{Binding Peaks, Mode=OneTime}"
                                                                 ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate DataType="{x:Type do:DisplayPeakOfChromatogram}">
                                                                    <StackPanel>
                                                                        <TextBlock Text="{Binding PeakTop.ChromXs.RT, Mode=OneTime}"/>
                                                                        <TextBlock>
                                                                            <TextBlock.Text>
                                                                                <MultiBinding StringFormat="{}{0} - {1}">
                                                                                    <Binding Path="PeakLeft.ChromXs.RT" Mode="OneTime"/>
                                                                                    <Binding Path="PeakRight.ChromXs.RT" Mode="OneTime"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                        <TextBlock>
                                                                            <TextBlock.Text>
                                                                                <MultiBinding StringFormat="Area: {0:F0}, Abundance: {1:F0}">
                                                                                    <Binding Path="Area" Mode="OneTime"/>
                                                                                    <Binding Path="Intensity" Mode="OneTime"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                        <Button Content="Remove"
                                                                                Command="{Binding Data, Source={StaticResource RemovePeakCommand}}"
                                                                                CommandParameter="{Binding Mode=OneTime}"/>
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ListBox>
                                                    </Expander>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </Grid>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </DataTemplate>
            </ui:DockItemsControl.ContentTemplate>
        </ui:DockItemsControl>
    </Grid>
</UserControl>
