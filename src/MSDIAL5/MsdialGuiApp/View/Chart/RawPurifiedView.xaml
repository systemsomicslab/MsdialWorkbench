<UserControl x:Class="CompMs.App.Msdial.View.Chart.RawPurifiedView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:core="clr-namespace:CompMs.Graphics.Core.Base;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Chart"
             xmlns:io="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
             xmlns:com="clr-namespace:CompMs.Common.Components;assembly=Common"
             xmlns:mvvm="clr-namespace:CompMs.CommonMVVM;assembly=CommonMVVM"
             mc:Ignorable="d" 
             Name="RawPurePlot"
             d:DataContext="{d:DesignInstance vm:RawPurifiedSpectrumsViewModel}"
             d:Background="White"
             d:DesignHeight="600" d:DesignWidth="370">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/ChartStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate DataType="{x:Type vm:SingleSpectrumViewModel}" x:Key="NormalTemplate">
                <Grid core:ChartBaseControl.VerticalAxis="{Binding VerticalAxis.Value}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{Binding Labels.GraphTitle}" Style="{StaticResource GraphTitle}" Grid.Row="0" Grid.Column="2"/>
                    <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            BorderThickness="1,0,0,1"
                            Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            behavior:ZoomByDragBehavior.IsEnabled="True"
                            behavior:ZoomByWheelBehavior.IsEnabled="True"
                            behavior:MoveByDragBehavior.IsEnabled="True"
                            behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True"
                            Grid.Column="2" Grid.Row="1">
                        <Grid>
                            <StackPanel VerticalAlignment="Center">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SpectrumLoaded.Value, Mode=OneWay}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <TextBlock Text="Loading ..." HorizontalAlignment="Center" FontSize="16" Margin="16"/>
                                <ProgressBar IsIndeterminate="True" HorizontalAlignment="Center" Width="160" Height="16"/>
                            </StackPanel>

                            <chart:LineSpectrumControlSlim ItemsSource="{Binding MsSpectrum.Value.Spectrum}"
                                                           DataType="{x:Type com:SpectrumPeak}"
                                                           HorizontalProperty="{Binding HorizontalProperty}"
                                                           VerticalProperty="{Binding VerticalProperty}"
                                                           LineBrush="{Binding Brush.Value}"
                                                           HueProperty="{Binding HueProperty}">
                                <chart:LineSpectrumControlSlim.ToolTip>
                                    <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="m/z: "/>
                                            <TextBlock Text="{Binding (chart:LineSpectrumControlSlim.FocusedItem).(com:SpectrumPeak.Mass)}"/>
                                            <TextBlock Text=" Intensity: "/>
                                            <TextBlock Text="{Binding (chart:LineSpectrumControlSlim.FocusedItem).(com:SpectrumPeak.Intensity)}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </chart:LineSpectrumControlSlim.ToolTip>
                            </chart:LineSpectrumControlSlim>
                            <chart:Annotator ItemsSource="{Binding MsSpectrum.Value.Spectrum}"
                                             HorizontalPropertyName="{Binding HorizontalProperty}"
                                             VerticalPropertyName="{Binding VerticalProperty}"
                                             LabelPropertyName="{Binding Labels.AnnotationLabelProperty}"
                                             OrderingPropertyName="{Binding Labels.AnnotationOrderProperty}"
                                             Brush="Black"
                                             Overlap="Horizontal, Direct"
                                             ClipToBounds="True"/>
                        </Grid>
                    </Border>
                    <chart:VerticalAxisControl HorizontalAxis="{x:Null}"
                                               Margin="0,0,0,1"
                                               Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"/>
                    <chart:HorizontalAxisControl VerticalAxis="{x:Null}"
                                                 Margin="1,0,0,0"
                                                 Grid.Column="2" Grid.Row="2" Grid.RowSpan="2"/>
                    <TextBlock Text="{Binding Labels.HorizontalTitle}"
                               Style="{StaticResource AxisTitle}"
                               IsHitTestVisible="False"
                               Grid.Row="3" Grid.Column="2"/>
                    <TextBlock Text="{Binding Labels.VerticalTitle}"
                               Style="{StaticResource AxisTitle}"
                               IsHitTestVisible="False"
                               Grid.Row="1" Grid.Column="0">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Grid>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:SingleSpectrumViewModel}" x:Key="FormalTemplate">
                <Grid core:ChartBaseControl.VerticalAxis="{Binding VerticalAxis.Value}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            BorderThickness="1.5,0,0,1.5"
                            Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            Grid.Column="2" Grid.Row="0">
                        <Grid>
                            <chart:LineSpectrumControlSlim ItemsSource="{Binding MsSpectrum.Value.Spectrum}"
                                                           DataType="{x:Type com:SpectrumPeak}"
                                                           HorizontalProperty="{Binding HorizontalProperty}"
                                                           VerticalProperty="{Binding VerticalProperty}"
                                                           LineBrush="{Binding Brush.Value}"
                                                           HueProperty="{Binding HueProperty}"/>
                            <chart:Annotator ItemsSource="{Binding MsSpectrum.Value.Spectrum}"
                                             HorizontalPropertyName="{Binding HorizontalProperty}"
                                             VerticalPropertyName="{Binding VerticalProperty}"
                                             LabelPropertyName="{Binding Labels.AnnotationLabelProperty}"
                                             OrderingPropertyName="{Binding Labels.AnnotationOrderProperty}"
                                             Brush="Black"
                                             Overlap="Horizontal, Direct"
                                             FontSize="17"/>
                        </Grid>
                    </Border>
                    <chart:VerticalAxisControl HorizontalAxis="{x:Null}"
                                               ShortTickSize="0"
                                               LabelSize="17"
                                               Margin="0,0,0,1.5"
                                               Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"/>
                    <chart:HorizontalAxisControl VerticalAxis="{x:Null}"
                                                 ShortTickSize="0"
                                                 LabelSize="17"
                                                 Margin="1.5,0,0,0"
                                                 Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"/>
                    <TextBlock Text="{Binding Labels.HorizontalTitle}"
                               Style="{StaticResource FormalItalicAxisTitle}"
                               Grid.Row="2" Grid.Column="2"/>
                    <TextBlock Text="{Binding Labels.VerticalTitle}"
                               Style="{StaticResource FormalAxisTitle}"
                               Grid.Row="0" Grid.Column="0">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Grid>
            </DataTemplate>
            <Style TargetType="ContentControl">
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="ContentTemplate" Value="{StaticResource NormalTemplate}"/>
            </Style>
            <Style TargetType="ContentControl" x:Key="FormalStyle">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="ContentTemplate" Value="{StaticResource FormalTemplate}"/>
            </Style>
            <io:StyleFormatter x:Key="FormattedChartFormatter" Style="{StaticResource FormalStyle}"/>
            <io:SaveImageAsCommand x:Key="SaveFormattedChartCommand" Formatter="{StaticResource FormattedChartFormatter}" Format="Emf"/>
            <io:CopyImageAsCommand x:Key="CopyFormattedChartCommand" Formatter="{StaticResource FormattedChartFormatter}" Format="Emf"/>
            <ContextMenu x:Key="ChartContextMenu" d:DataContext="{d:DesignInstance Type={x:Type vm:SingleSpectrumViewModel}}">
                <MenuItem Header="Save spectra table as.."
                          Command="{Binding SaveCommand, FallbackValue={x:Static mvvm:NeverCommand.Instance}}"/>
                <MenuItem Header="Save image as...">
                    <MenuItem Header="Save formatted image"
                              Command="{StaticResource SaveFormattedChartCommand}"
                              CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save as emf"
                              Command="{x:Static io:SaveImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save as png"
                              Command="{x:Static io:SaveImageAsCommand.PngInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </MenuItem>
                <!--
                <MenuItem Header="Save image using dialog"
                          Command="{x:Static io:SaveImageAsWithDialogCommand.Instance}"
                          CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                          -->
                <MenuItem Header="Copy image as...">
                    <MenuItem Header="Copy formatted image"
                              Command="{StaticResource CopyFormattedChartCommand}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Copy as emf"
                              Command="{x:Static io:CopyImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Copy as png"
                              Command="{x:Static io:CopyImageAsCommand.BitmapInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </MenuItem>
                <!--
                <MenuItem Header="Copy image using dialog"
                          Command="{x:Static io:CopyImageAsWithDialogCommand.Instance}"
                          CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                          -->
            </ContextMenu>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid core:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis, Mode=OneTime}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ContentControl Content="{Binding}"
                        DataContext="{Binding RawSpectrumViewModel}" Grid.Row="0"
                        ContextMenu="{StaticResource ChartContextMenu}"/>
        <ContentControl Content="{Binding}" Grid.Row="1"
                        DataContext="{Binding DecSpectrumViewModel}" 
                        ContextMenu="{StaticResource ChartContextMenu}"/>
    </Grid>
</UserControl>
