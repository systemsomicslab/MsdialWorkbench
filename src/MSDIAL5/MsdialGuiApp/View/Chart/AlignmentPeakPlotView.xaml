<UserControl x:Class="CompMs.App.Msdial.View.Chart.AlignmentPeakPlotView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:graphio="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Chart"
             xmlns:do="clr-namespace:CompMs.App.Msdial.Model.DataObj"
             d:DataContext="{d:DesignInstance Type={x:Type vm:AlignmentPeakPlotViewModel}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/ChartStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>   
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <chart:MultiChart HorizontalAxis="{Binding HorizontalAxis, Mode=OneWay}"
                          VerticalAxis="{Binding VerticalAxis.Value, Mode=OneWay}"
                          GraphTitle="{Binding GraphTitle.Value, Mode=OneTime}"
                          HorizontalTitle="{Binding HorizontalTitle.Value, Mode=OneTime}"
                          VerticalTitle="{Binding VerticalTitle.Value, Mode=OneTime}"
                          Style="{StaticResource OverlapChart}"
                          Background="WhiteSmoke"
                          BorderBrush="Black">
            <chart:MultiChart.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Save image using dialog"
                              Command="{x:Static graphio:SaveImageAsWithDialogCommand.Instance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save image as...">
                        <MenuItem Header="Save as emf"
                                  Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Save as png"
                                  Command="{x:Static graphio:SaveImageAsCommand.PngInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </MenuItem>
                    <MenuItem Header="Copy image using dialog"
                              Command="{x:Static graphio:CopyImageAsWithDialogCommand.Instance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Copy image as...">
                        <MenuItem Header="Copy as emf"
                                  Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Copy as png"
                                  Command="{x:Static graphio:CopyImageAsCommand.BitmapInstance}"
                                  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Duplicate selected peak spot" Command="{Binding DuplicatesCommand, Mode=OneTime}"/>
                    <MenuItem Header="Export as MRMPROBS reference format">
                        <MenuItem Header="Save as MRMPROBS reference format" Command="{Binding SaveMrmprobsCommand, Mode=OneTime}"/>
                        <MenuItem Header="Copy as MRMPROBS reference format" Command="{Binding CopyMrmprobsCommand, Mode=OneTime}"/>
                    </MenuItem>
                </ContextMenu>
            </chart:MultiChart.ContextMenu>
            <chart:ScatterControlSlim x:Name="alignmentScatter"
                                      ItemsSource="{Binding Spots}"
                                      HorizontalProperty="{Binding HorizontalProperty.Value, Mode=OneWay}"
                                      VerticalProperty="{Binding VerticalProperty.Value, Mode=OneWay}"
                                      PointBrush="{Binding Brush.Value, Mode=OneWay}"
                                      DataType="{x:Type do:AlignmentSpotPropertyModel}"
                                      Radius="5.5"
                                      SelectedItem="{Binding Target.Value, Mode=TwoWay}"
                                      Focusable="True">
                <chart:ScatterControlSlim.ToolTip>
                    <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding FocusedItem.MasterAlignmentID, StringFormat=ID: {0}}"/>
                            <TextBlock Text="{Binding FocusedItem.Name, StringFormat=Name: {0}}"/>
                            <TextBlock Text="{Binding FocusedItem.AdductType, StringFormat=Ionform: {0}}"/>
                            <TextBlock Text="{Binding FocusedItem.TimesCenter, StringFormat=Time: {0:0.000}}"/>
                            <TextBlock Text="{Binding FocusedItem.MassCenter, StringFormat=m/z: {0:0.0000}}"/>
                            <TextBlock Text="{Binding FocusedItem.HeightAverage, StringFormat=HeightAve: {0:0}}"/>
                        </StackPanel>
                    </ToolTip>
                </chart:ScatterControlSlim.ToolTip>
            </chart:ScatterControlSlim>
            <chart:Annotator ItemsSource="{Binding Spots, Mode=OneWay}"
                             HorizontalPropertyName="{Binding HorizontalProperty.Value, Mode=OneWay}"
                             VerticalPropertyName="{Binding VerticalProperty.Value, Mode=OneWay}"
                             LabelPropertyName="{Binding LabelProperty.Value, Mode=OneWay}"/>
            <chart:SpotLinkedAnnotator Spots="{Binding Spots, Mode=OneWay}"
                                       Links="{Binding PeakLinks.Links, Mode=OneWay}"
                                       Annotators="{Binding PeakLinks.Annotations, Mode=OneWay}"
                                       DataType="{x:Type do:AlignmentSpotPropertyModel}"
                                       Target="{Binding Target.Value, Mode=OneWay}"
                                       HorizontalProperty="{Binding HorizontalProperty.Value, Mode=OneWay}"
                                       VerticalProperty="{Binding VerticalProperty.Value, Mode=OneWay}"
                                       LinkBrush="{Binding PeakLinks.LinkerBrush, Mode=OneWay}"
                                       SpotLabelBrush="{Binding PeakLinks.SpotLabelBrush, Mode=OneWay}"
                                       Radius="5.5"/>
            <ContentControl Content="{Binding SelectedPoint, ElementName=alignmentScatter}"
                            ContentTemplate="{DynamicResource FocusCross}"
                            IsHitTestVisible="False">
                <ContentControl.Resources>
                    <DataTemplate x:Key="FocusCross">
                        <Canvas ClipToBounds="True">
                            <Canvas.Resources>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedPoint, ElementName=alignmentScatter}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Resources>
                            <Rectangle Fill="Red" VerticalAlignment="Stretch" IsHitTestVisible="False"
                                       Width="1" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}"
                                       Canvas.Left="{Binding X}"/>
                            <Rectangle Fill="Red" VerticalAlignment="Stretch" IsHitTestVisible="False"
                                       Height="1" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}"
                                       Canvas.Top="{Binding Y}"/>
                        </Canvas>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </chart:MultiChart>
    </Grid>
</UserControl>
