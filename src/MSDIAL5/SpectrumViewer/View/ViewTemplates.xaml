<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:vm="clr-namespace:CompMs.App.SpectrumViewer.ViewModel"
                    xmlns:model="clr-namespace:CompMs.App.SpectrumViewer.Model"
                    xmlns:components="clr-namespace:CompMs.Common.Components;assembly=Common"
                    xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
                    xmlns:ui="clr-namespace:CompMs.Graphics.UI;assembly=ChartDrawing"
                    xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
                    xmlns:graphio="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
                    xmlns:design="clr-namespace:CompMs.Graphics.Design;assembly=ChartDrawing"
                    xmlns:ccore="clr-namespace:CompMs.Graphics.Core.Base;assembly=ChartDrawing"
                    xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>

    <Style TargetType="{x:Type chart:MultiChart}" x:Key="OverlapChart">
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chart:MultiChart}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock" x:Key="GraphTitle">
                                <Setter Property="FontFamily" Value="Calibri"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                            </Style>
                            <Style TargetType="TextBlock" x:Key="AxisTitle">
                                <Setter Property="FontFamily" Value="Calibri"/>
                                <Setter Property="FontStyle" Value="Italic"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition />
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="15"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Name="GraphTitle"
                                   Text="{Binding GraphTitle, RelativeSource={RelativeSource TemplatedParent}}"
                                   Style="{StaticResource GraphTitle}"
                                   IsHitTestVisible="False"
                                   Grid.Row="0" Grid.Column="2"/>

                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,0,1"
                                Grid.Row="1" Grid.Column="2">
                            <Border Background="{TemplateBinding Background}"
                                    behavior:ZoomByDragBehavior.IsEnabled="True"
                                    behavior:ZoomByWheelBehavior.IsEnabled="True"
                                    behavior:MoveByDragBehavior.IsEnabled="True"
                                    behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True">
                                <Grid IsItemsHost="True"/>
                            </Border>
                        </Border>

                        <chart:HorizontalAxisControl x:Name="PART_HorizontalAxis"
                                                    VerticalAxis="{x:Null}"
                                                    Margin="1,0,0,0"
                                                    Grid.Row="2" Grid.RowSpan="2" Grid.Column="2"/>
                        <chart:VerticalAxisControl x:Name="PART_VerticalAxis"
                                                  HorizontalAxis="{x:Null}"
                                                  Margin="0,0,0,1"
                                                  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"/>

                        <TextBlock Name="HorizontalTitle"
                                   Text="{TemplateBinding HorizontalTitle}"
                                   Style="{StaticResource AxisTitle}"
                                   IsHitTestVisible="False"
                                   Grid.Row="3" Grid.Column="2"/>
                        <TextBlock Name="VerticalTitle"
                                   Text="{TemplateBinding VerticalTitle}"
                                   Style="{StaticResource AxisTitle}"
                                   IsHitTestVisible="False"
                                   Grid.Row="1" Grid.Column="0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:SpectrumViewModel}">
        <DataTemplate.Resources>
            <AlternationConverter x:Key="PenConverter">
                <Pen Brush="White" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightCoral" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightSkyBlue" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightGreen" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightGray" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightPink" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightBlue" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="LightYellow" Thickness="2" PresentationOptions:Freeze="True"/>
            </AlternationConverter>
            <AlternationConverter x:Key="BrushConverter">
                <x:Static Member="Brushes.White"/>
                <x:Static Member="Brushes.LightCoral"/>
                <x:Static Member="Brushes.LightSkyBlue"/>
                <x:Static Member="Brushes.LightGreen"/>
                <x:Static Member="Brushes.LightGray"/>
                <x:Static Member="Brushes.LightPink"/>
                <x:Static Member="Brushes.LightBlue"/>
                <x:Static Member="Brushes.LightYellow"/>
            </AlternationConverter>
            <AlternationConverter x:Key="BrushMapperConverter"
                                  xmlns:design="clr-namespace:CompMs.Graphics.Design;assembly=ChartDrawing">
                <design:ConstantBrushMapper Brush="{x:Static Brushes.White}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightCoral}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightSkyBlue}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightGreen}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightGray}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightPink}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightBlue}"/>
                <design:ConstantBrushMapper Brush="{x:Static Brushes.LightYellow}"/>
            </AlternationConverter> 
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
        </DataTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <chart:MultiChart ItemsSource="{Binding DisplayScans}"
                              HorizontalTitle="m/z"
                              VerticalTitle="{Binding VerticalAxis.UnitLabel, StringFormat=Intensity ({0})}"
                              HorizontalAxis="{Binding HorizontalAxis}"
                              VerticalAxis="{Binding VerticalAxis}"
                              Background="#FF202020" BorderBrush="White"
                              Style="{StaticResource OverlapChart}"
                              AlternationCount="8"
                              Grid.Column="0">
                <chart:MultiChart.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch"
                              Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                            <chart:LineSpectrumControlSlim ItemsSource="{Binding Spectrum}"
                                                           HorizontalProperty="Mass"
                                                           VerticalProperty="Intensity"
                                                           DataType="{x:Type components:SpectrumPeak}"
                                                           LineThickness="2"
                                                           LineBrush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource BrushMapperConverter}}">
                                <chart:LineSpectrumControlSlim.ToolTip>
                                    <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                        <StackPanel>
                                            <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                                            <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                            <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </chart:LineSpectrumControlSlim.ToolTip>
                            </chart:LineSpectrumControlSlim>
                            <chart:Annotator ItemsSource="{Binding Spectrum}"
                                             HorizontalPropertyName="Mass"
                                             VerticalPropertyName="Intensity"
                                             Overlap="Direct,Horizontal"
                                             OrderingPropertyName="Intensity"
                                             LabelPropertyName="Mass"
                                             Format="N3"
                                             TopN="5"
                                             Brush="{Binding Path=(ItemsControl.AlternationIndex),
                                                             RelativeSource={RelativeSource TemplatedParent},
                                                             Converter={StaticResource BrushConverter}}"/>
                        </Grid>
                    </DataTemplate>
                </chart:MultiChart.ItemTemplate>
            </chart:MultiChart>

            <ItemsControl ItemsSource="{Binding DisplayScans}"
                          VerticalAlignment="Center"
                          AlternationCount="8"
                          Margin="8"
                          Grid.Column="1">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                                    Margin="0,4">
                            <ToggleButton IsChecked="{Binding Visible}">
                                <Image Width="24">
                                    <Image.Source>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <GeometryDrawing Geometry="M 0,0 H 8"
                                                                 Pen="{Binding Path=(ItemsControl.AlternationIndex),
                                                                               RelativeSource={RelativeSource TemplatedParent},
                                                                               Converter={StaticResource PenConverter}}"/>
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                            </ToggleButton>
                            <TextBlock Text="{Binding Name}" Margin="8,0" Foreground="White"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SplitSpectrumsViewModel}">
        <DataTemplate.Resources>
            <AlternationConverter x:Key="BrushConverter">
                <x:Static Member="Brushes.Black"/>
                <x:Static Member="Brushes.Red"/>
                <x:Static Member="Brushes.Blue"/>
                <x:Static Member="Brushes.Green"/>
                <x:Static Member="Brushes.Gray"/>
                <x:Static Member="Brushes.Magenta"/>
                <x:Static Member="Brushes.Cyan"/>
                <x:Static Member="Brushes.Yellow"/>
            </AlternationConverter>
            <AlternationConverter x:Key="PenConverter">
                <Pen Brush="Black" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Red" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Blue" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Green" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Gray" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Magenta" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Cyan" Thickness="2" PresentationOptions:Freeze="True"/>
                <Pen Brush="Yellow" Thickness="2" PresentationOptions:Freeze="True"/>
            </AlternationConverter>
            <AlternationConverter x:Key="BrushMapperConverter"
                                  xmlns:design="clr-namespace:CompMs.Graphics.Design;assembly=ChartDrawing">
                <design:ConstantBrushMapper Brush="Black"/>
                <design:ConstantBrushMapper Brush="Red"/>
                <design:ConstantBrushMapper Brush="Blue"/>
                <design:ConstantBrushMapper Brush="Green"/>
                <design:ConstantBrushMapper Brush="Gray"/>
                <design:ConstantBrushMapper Brush="Magenta"/>
                <design:ConstantBrushMapper Brush="Cyan"/>
                <design:ConstantBrushMapper Brush="Yellow"/>
            </AlternationConverter>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
            <DataTemplate x:Key="LegendItem" DataType="{x:Type model:DisplayScan}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                            Margin="0,4">
                    <CheckBox IsChecked="{Binding IsSelected}"/>
                    <ToggleButton IsChecked="{Binding Visible}">
                        <Image Width="24">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Geometry="M 0,0 H 8"
                                                         Pen="{Binding Path=(ItemsControl.AlternationIndex),
                                                                       RelativeSource={RelativeSource TemplatedParent},
                                                                       Converter={StaticResource PenConverter}}"/>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </ToggleButton>
                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Margin="8,0" Foreground="Black"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="LegendViewModelItem" DataType="{x:Type vm:DisplayScanViewModel}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                            Margin="0,4">
                    <ToggleButton IsChecked="{Binding Visible.Value}">
                        <Image Width="24">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Geometry="M 0,0 H 8">
                                            <GeometryDrawing.Pen>
                                                <Pen Brush="{Binding Brush}" Thickness="2" PresentationOptions:Freeze="True"/>
                                            </GeometryDrawing.Pen>
                                        </GeometryDrawing>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </ToggleButton>
                    <TextBlock Text="{Binding Name}" Margin="8,0" Foreground="Black"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="ExportLegendItem">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                            Margin="0,4"
                            Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                    <ToggleButton IsChecked="{Binding Visible}">
                        <Image Width="24">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Geometry="M 0,0 H 8"
                                                         Pen="{Binding Path=(ItemsControl.AlternationIndex),
                                                                       RelativeSource={RelativeSource TemplatedParent},
                                                                       Converter={StaticResource PenConverter}}"/>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </ToggleButton>
                    <TextBlock Text="{Binding Name}" Margin="8,0" Foreground="Black"/>
                </StackPanel>
            </DataTemplate>
            <Style TargetType="ContentControl" x:Key="ViewChartStyle">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type vm:SplitSpectrumsViewModel}">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="15"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <chart:VerticalAxisControl VerticalAxis="{Binding UpperSpectrumsViewModel.VerticalAxis}" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock Text="{Binding UpperSpectrumsViewModel.VerticalAxis.UnitLabel}" VerticalAlignment="Top" Grid.Row="0" Grid.Column="1"/>
                                <ItemsControl ItemsSource="{Binding UpperSpectrumsViewModel.DisplayScans}"
                                              AlternationCount="8"
                                              ccore:ChartBaseControl.VerticalAxis="{Binding UpperSpectrumsViewModel.VerticalAxis}"
                                              ccore:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis}"
                                              Grid.Row="0"
                                              Grid.Column="2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Drop">
                                            <rp:EventToReactiveCommand Command="{Binding UpperSpectrumsViewModel.DropCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid Background="WhiteSmoke"
                                                  behavior:ZoomByDragBehavior.IsEnabled="True"
                                                  behavior:ZoomByWheelBehavior.IsEnabled="True"
                                                  behavior:MoveByDragBehavior.IsEnabled="True"
                                                  behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                                                <chart:LineSpectrumControlSlim ItemsSource="{Binding Spectrum}"
                                                                               HorizontalProperty="Mass"
                                                                               VerticalProperty="Intensity"
                                                                               DataType="{x:Type components:SpectrumPeak}"
                                                                               LineBrush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                                                   Converter={StaticResource BrushMapperConverter}}">
                                                    <chart:LineSpectrumControlSlim.ToolTip>
                                                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                                            <StackPanel>
                                                                <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                                                                <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                                                <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}"/>
                                                            </StackPanel>
                                                        </ToolTip>
                                                    </chart:LineSpectrumControlSlim.ToolTip>
                                                </chart:LineSpectrumControlSlim>
                                                <chart:Annotator ItemsSource="{Binding Path=SpectrumLabel}"
                                                                 HorizontalPropertyName="Mass"
                                                                 VerticalPropertyName="Intensity"
                                                                 Overlap="Direct, Horizontal"
                                                                 OrderingPropertyName="Intensity"
                                                                 LabelPropertyName="{Binding Path=DataContext.LabelProperty.Value, FallbackValue=Mass,
                                                                                             RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                                 Format="N4"
                                                                 TopN="10"
                                                                 Brush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                                 Converter={StaticResource BrushConverter}}"
                                                                 Visibility="{Binding Path=DataContext.UpperSpectrumsViewModel.IsLabelVisible.Value,
                                                                                      RelativeSource={RelativeSource AncestorType=ItemsControl},
                                                                                      Converter={StaticResource BooleanToVisibility}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl ItemsSource="{Binding UpperSpectrumsViewModel.DisplayScans}"
                                              VerticalAlignment="Center"
                                              AlternationCount="8"
                                              ItemTemplate="{StaticResource LegendItem}"
                                              Grid.Row="0"
                                              Grid.Column="3"/>

                                <chart:VerticalAxisControl VerticalAxis="{Binding LowerSpectrumsViewModel.VerticalAxis}" FlippedY="False" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock Text="{Binding LowerSpectrumsViewModel.VerticalAxis.UnitLabel}" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="1"/>
                                <ItemsControl ItemsSource="{Binding LowerSpectrumsViewModel.DisplayScans}"
                                              AlternationCount="8"
                                              ccore:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis}"
                                              ccore:ChartBaseControl.VerticalAxis="{Binding LowerSpectrumsViewModel.VerticalAxis}"
                                              Grid.Row="1"
                                              Grid.Column="2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Drop">
                                            <rp:EventToReactiveCommand Command="{Binding LowerSpectrumsViewModel.DropCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid Background="WhiteSmoke"
                                                  behavior:ZoomByDragBehavior.IsEnabled="True"
                                                  behavior:ZoomByWheelBehavior.IsEnabled="True"
                                                  behavior:MoveByDragBehavior.IsEnabled="True"
                                                  behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                                                <chart:LineSpectrumControlSlim ItemsSource="{Binding Spectrum}"
                                                                               HorizontalProperty="Mass"
                                                                               VerticalProperty="Intensity"
                                                                               DataType="{x:Type components:SpectrumPeak}"
                                                                               LineBrush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                                                   Converter={StaticResource BrushMapperConverter}}"
                                                                               FlippedY="False">
                                                    <chart:LineSpectrumControlSlim.ToolTip>
                                                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                                            <StackPanel>
                                                                <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                                                                <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                                                <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}"/>
                                                            </StackPanel>
                                                        </ToolTip>
                                                    </chart:LineSpectrumControlSlim.ToolTip>
                                                </chart:LineSpectrumControlSlim>
                                                <chart:Annotator ItemsSource="{Binding Path=SpectrumLabel}"
                                                                 HorizontalPropertyName="Mass"
                                                                 VerticalPropertyName="Intensity"
                                                                 Overlap="Direct, Horizontal"
                                                                 OrderingPropertyName="Intensity"
                                                                 LabelPropertyName="{Binding Path=DataContext.LabelProperty.Value, FallbackValue=Mass,
                                                                                             RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                                 Format="N4"
                                                                 TopN="10"
                                                                 Brush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                                 Converter={StaticResource BrushConverter}}"
                                                                 Visibility="{Binding Path=DataContext.LowerSpectrumsViewModel.IsLabelVisible.Value,
                                                                                      RelativeSource={RelativeSource AncestorType=ItemsControl},
                                                                                      Converter={StaticResource BooleanToVisibility}}"
                                                                 FlippedY="False"
                                                                 ContentAlignment="BottomCenter"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <StackPanel Grid.Column="3" Grid.Row="1">
                                    <ItemsControl ItemsSource="{Binding LowerSpectrumsViewModel.DisplayScans}"
                                                  VerticalAlignment="Center"
                                                  AlternationCount="8"
                                                  ItemTemplate="{StaticResource LegendItem}"/>
                                    <ui:ExecutableBar Label="Shift scan"
                                                      Command="{Binding ShiftScanCommand, Mode=OneTime}"
                                                      ButtonContent="Shift">
                                        <ui:NumericUpDown Value="{Binding ShiftMz.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Interval="1"/>
                                    </ui:ExecutableBar>
                                    <Button Content="Remove scan" Command="{Binding RemoveScanCommand, Mode=OneTime}"/>
                                </StackPanel>

                                <TextBlock Text="Abundance"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <TextBlock Text="m/z"
                                           FontStyle="Italic"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="2" Grid.Row="3"/>

                                <chart:HorizontalAxisControl HorizontalAxis="{Binding HorizontalAxis}" Grid.Row="2" Grid.Column="2"/>

                                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="2" Grid.Column="2" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" BorderBrush="Gray" BorderThickness="1"/>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style> 
            <Style TargetType="ContentControl" x:Key="MassDefectViewChartStyle">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type vm:SplitSpectrumsViewModel}">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="3*"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="15"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <chart:VerticalAxisControl VerticalAxis="{Binding VerticalAxis}" Grid.Row="0" Grid.Column="1"/>
                                <ItemsControl ItemsSource="{Binding DisplayScans}"
                                              AlternationCount="8"
                                              ccore:ChartBaseControl.VerticalAxis="{Binding VerticalAxis}"
                                              ccore:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis}"
                                              Grid.Row="0"
                                              Grid.Column="2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Drop">
                                            <rp:EventToReactiveCommand Command="{Binding DropCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid Background="WhiteSmoke"
                                                  behavior:ZoomByDragBehavior.IsEnabled="True"
                                                  behavior:ZoomByWheelBehavior.IsEnabled="True"
                                                  behavior:MoveByDragBehavior.IsEnabled="True"
                                                  behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Visibility="{Binding Visible.Value, Converter={StaticResource BooleanToVisibility}}">
                                                <chart:LineSpectrumControlSlim ItemsSource="{Binding Spectrum}"
                                                                               HorizontalProperty="Mass"
                                                                               VerticalProperty="Intensity"
                                                                               DataType="{x:Type components:SpectrumPeak}"
                                                                               VerticalAxis="{Binding IntensityAxis}"
                                                                               LineBrush="{Binding ConstantBrush}">
                                                    <chart:LineSpectrumControlSlim.ToolTip>
                                                        <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                                            <StackPanel>
                                                                <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                                                                <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                                                <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}"/>
                                                            </StackPanel>
                                                        </ToolTip>
                                                    </chart:LineSpectrumControlSlim.ToolTip>
                                                </chart:LineSpectrumControlSlim>
                                                <chart:Annotator ItemsSource="{Binding Spectrum}"
                                                                 HorizontalPropertyName="Mass"
                                                                 VerticalPropertyName="Intensity"
                                                                 VerticalAxis="{Binding IntensityAxis}"
                                                                 Overlap="Direct, Horizontal"
                                                                 OrderingPropertyName="Intensity"
                                                                 LabelPropertyName="Mass"
                                                                 Format="N4"
                                                                 TopN="10"
                                                                 Brush="{Binding Brush}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <chart:VerticalAxisControl VerticalAxis="{Binding DefectVerticalAxis}" Grid.Row="1" Grid.Column="1"/>
                                <ItemsControl ItemsSource="{Binding DisplayScans}"
                                              AlternationCount="8"
                                              ccore:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis}"
                                              ccore:ChartBaseControl.VerticalAxis="{Binding DefectVerticalAxis}"
                                              Grid.Row="1"
                                              Grid.Column="2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Drop">
                                            <rp:EventToReactiveCommand Command="{Binding DropCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid Background="WhiteSmoke"
                                                  behavior:ZoomByDragBehavior.IsEnabled="True"
                                                  behavior:ZoomByWheelBehavior.IsEnabled="True"
                                                  behavior:MoveByDragBehavior.IsEnabled="True"
                                                  behavior:ResetRangeByDoubleClickBehavior.IsEnabled="True"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <chart:ScatterControlSlim ItemsSource="{Binding Spectrum}"
                                                                      HorizontalProperty="Mass"
                                                                      VerticalProperty="Mass"
                                                                      DataType="{x:Type components:SpectrumPeak}"
                                                                      HueProperty="Intensity"
                                                                      PointBrush="{Binding GradientBrush}"
                                                                      Visibility="{Binding Visible.Value, Converter={StaticResource BooleanToVisibility}}">
                                                <chart:ScatterControlSlim.ToolTip>
                                                    <ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                                        <StackPanel>
                                                            <TextBlock Text="{Binding FocusedItem.Comment, StringFormat=Comment: {0}}"/>
                                                            <TextBlock Text="{Binding FocusedItem.Mass, StringFormat=m/z: {0}}"/>
                                                            <TextBlock Text="{Binding FocusedItem.Intensity, StringFormat=Intensity: {0}}"/>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </chart:ScatterControlSlim.ToolTip>
                                            </chart:ScatterControlSlim>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <ItemsControl ItemsSource="{Binding DisplayScans}"
                                              VerticalAlignment="Center"
                                              AlternationCount="8"
                                              ItemTemplate="{StaticResource LegendViewModelItem}"
                                              Grid.Row="0"
                                              Grid.Column="3"/>
                                <Grid Margin="8" Grid.Row="1" Grid.Column="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="2*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Relative abundance" VerticalAlignment="Center">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="-90" CenterX=".5" CenterY=".5"/>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                    <chart:VerticalAxisControl VerticalAxis="{Binding IntensityGradientAxis}" Grid.Column="1"/>
                                    <Rectangle Grid.Column="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                                <GradientStop Color="LightGray" Offset="0"/>
                                                <GradientStop Color="Black" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>

                                <TextBlock Text="Relative abundance"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <TextBlock Text="Mass defect"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="1">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <TextBlock Text="m/z"
                                           FontStyle="Italic"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="2" Grid.Row="3"/>

                                <chart:HorizontalAxisControl HorizontalAxis="{Binding HorizontalAxis}" Grid.Row="2" Grid.Column="2"/>

                                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="2" Grid.Column="2" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" BorderBrush="Black" BorderThickness="1"/>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style> 
            <Style TargetType="ContentControl" x:Key="ExportChartStyle">
                <Style.Resources>
                    <Style TargetType="chart:Annotator">
                        <Setter Property="FontSize" Value="17"/>
                    </Style>
                </Style.Resources>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="15"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <chart:VerticalAxisControl VerticalAxis="{Binding UpperSpectrumsViewModel.VerticalAxis}"
                                                           ShortTickSize="0"
                                                           Grid.Row="0" Grid.Column="1"/>
                                <ItemsControl ItemsSource="{Binding UpperSpectrumsViewModel.DisplayScans}"
                                              AlternationCount="8"
                                              ccore:ChartBaseControl.VerticalAxis="{Binding UpperSpectrumsViewModel.VerticalAxis}"
                                              ccore:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis}"
                                              Grid.Row="0"
                                              Grid.Column="2">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                                                <chart:LineSpectrumControlSlim ItemsSource="{Binding Spectrum}"
                                                                               HorizontalProperty="Mass"
                                                                               VerticalProperty="Intensity"
                                                                               DataType="{x:Type components:SpectrumPeak}"
                                                                               LineBrush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                                                   Converter={StaticResource BrushMapperConverter}}"/>
                                                <chart:Annotator ItemsSource="{Binding Spectrum}"
                                                                 HorizontalPropertyName="Mass"
                                                                 VerticalPropertyName="Intensity"
                                                                 Overlap="Direct, Horizontal"
                                                                 OrderingPropertyName="Intensity"
                                                                 LabelPropertyName="Mass"
                                                                 Format="N4"
                                                                 TopN="10"
                                                                 Brush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                                 Converter={StaticResource BrushConverter}}"
                                                                 Visibility="{Binding Path=DataContext.UpperSpectrumsViewModel.IsLabelVisible.Value,
                                                                                      RelativeSource={RelativeSource AncestorType=ItemsControl},
                                                                                      Converter={StaticResource BooleanToVisibility}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl ItemsSource="{Binding UpperSpectrumsViewModel.DisplayScans}"
                                              VerticalAlignment="Center"
                                              AlternationCount="8"
                                              ItemTemplate="{StaticResource ExportLegendItem}"
                                              Grid.Row="0"
                                              Grid.Column="3"/>

                                <chart:VerticalAxisControl VerticalAxis="{Binding LowerSpectrumsViewModel.VerticalAxis}"
                                                           FlippedY="False"
                                                           ShortTickSize="0"
                                                           Grid.Row="1" Grid.Column="1"/>
                                <ItemsControl ItemsSource="{Binding LowerSpectrumsViewModel.DisplayScans}"
                                              AlternationCount="8"
                                              ccore:ChartBaseControl.HorizontalAxis="{Binding HorizontalAxis}"
                                              ccore:ChartBaseControl.VerticalAxis="{Binding LowerSpectrumsViewModel.VerticalAxis}"
                                              Grid.Row="1"
                                              Grid.Column="2">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibility}}">
                                                <chart:LineSpectrumControlSlim ItemsSource="{Binding Spectrum}"
                                                                               HorizontalProperty="Mass"
                                                                               VerticalProperty="Intensity"
                                                                               DataType="{x:Type components:SpectrumPeak}"
                                                                               LineBrush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                                                   Converter={StaticResource BrushMapperConverter}}"
                                                                               FlippedY="False"/>
                                                <chart:Annotator ItemsSource="{Binding Spectrum}"
                                                                 HorizontalPropertyName="Mass"
                                                                 VerticalPropertyName="Intensity"
                                                                 Overlap="Direct, Horizontal"
                                                                 OrderingPropertyName="Intensity"
                                                                 LabelPropertyName="Mass"
                                                                 Format="N4"
                                                                 TopN="10"
                                                                 Brush="{Binding Path=(ItemsControl.AlternationIndex),
                                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                                 Converter={StaticResource BrushConverter}}"
                                                                 Visibility="{Binding Path=DataContext.LowerSpectrumsViewModel.IsLabelVisible.Value,
                                                                                      RelativeSource={RelativeSource AncestorType=ItemsControl},
                                                                                      Converter={StaticResource BooleanToVisibility}}"
                                                                 FlippedY="False"
                                                                 ContentAlignment="BottomCenter"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl ItemsSource="{Binding LowerSpectrumsViewModel.DisplayScans}"
                                              VerticalAlignment="Center"
                                              AlternationCount="8"
                                              ItemTemplate="{StaticResource ExportLegendItem}"
                                              Grid.Row="1"
                                              Grid.Column="3"/>

                                <TextBlock Text="Abundance"
                                           FontFamily="Arial" FontSize="17"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <TextBlock Text="m/z"
                                           FontFamily="Arial" FontStyle="Italic" FontSize="17"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Grid.Column="2" Grid.Row="3"/>

                                <chart:HorizontalAxisControl HorizontalAxis="{Binding HorizontalAxis}"
                                                             ShortTickSize="0"
                                                             Grid.Row="2" Grid.Column="2"/>

                                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="2" Grid.Column="2" BorderBrush="Black" BorderThickness="1"/>
                                <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" BorderBrush="Black" BorderThickness="1"/>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <graphio:StyleFormatter x:Key="ExportChartFormatter" Style="{StaticResource ExportChartStyle}"/>
            <graphio:SaveImageAsCommand x:Key="SaveFormatChartCommand" Formatter="{StaticResource ExportChartFormatter}" Format="Emf"/>
            <graphio:CopyImageAsCommand x:Key="CopyFormatChartCommand" Formatter="{StaticResource ExportChartFormatter}" Format="Emf"/>
        </DataTemplate.Resources>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <StackPanel Orientation="Horizontal" Margin="8,0">
                    <RadioButton x:Name="EnableSpectrumView" Content="Spectrum" IsChecked="True" Foreground="White" VerticalAlignment="Center"/>
                    <RadioButton x:Name="EnableMassDefectView" Content="Mass defect" Foreground="White" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="8,0">
                    <TextBlock Text="Upper axis:" Margin="0,0,4,0" Foreground="White" VerticalAlignment="Center"/>
                    <ComboBox ItemsSource="{Binding UpperSpectrumsViewModel.VerticalAxes}"
                              SelectedValue="{Binding UpperSpectrumsViewModel.VerticalAxis}"
                              SelectedValuePath="Axis"
                              DisplayMemberPath="Label"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="8,0">
                    <TextBlock Text="Lower axis:" Margin="0,0,4,0" Foreground="White" VerticalAlignment="Center"/>
                    <ComboBox ItemsSource="{Binding LowerSpectrumsViewModel.VerticalAxes}"
                              SelectedValue="{Binding LowerSpectrumsViewModel.VerticalAxis}"
                              SelectedValuePath="Axis"
                              DisplayMemberPath="Label"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="8,0">
                    <TextBlock Text="Upper label:" Margin="0,0,4,0" Foreground="White" VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding UpperSpectrumsViewModel.IsLabelVisible.Value}" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="8,0">
                    <TextBlock Text="Lower label:" Margin="0,0,4,0" Foreground="White" VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding LowerSpectrumsViewModel.IsLabelVisible.Value}" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="8,0">
                    <TextBlock Text="Label type:" Margin="0,0,4,0" Foreground="White" VerticalAlignment="Center"/>
                    <ComboBox SelectedValuePath="Tag" SelectedIndex="0"
                              SelectedValue="{Binding Path=LabelProperty.Value, Mode=OneWayToSource}">
                        <ComboBoxItem Content="m/z" Tag="Mass"/>
                        <ComboBoxItem Content="NL" Tag="NeutralLoss"/>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
            <ContentControl Style="{StaticResource ViewChartStyle}"
                            Content="{Binding}"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibility}, ElementName=EnableSpectrumView}"
                            Grid.Row="1">
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Save spectrum image as...">
                            <MenuItem Header="Save formatted image"
                                      Command="{StaticResource SaveFormatChartCommand}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Save image as emf"
                                      Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Save image as png"
                                      Command="{x:Static graphio:SaveImageAsCommand.PngInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        </MenuItem>
                        <MenuItem Header="Copy spectrum image as...">
                            <MenuItem Header="Copy formatted image"
                                      Command="{StaticResource CopyFormatChartCommand}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Copy image as emf"
                                      Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Copy image as png"
                                      Command="{x:Static graphio:CopyImageAsCommand.BitmapInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        </MenuItem>
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
            <ContentControl Style="{StaticResource MassDefectViewChartStyle}"
                            Content="{Binding}"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibility}, ElementName=EnableMassDefectView}"
                            Grid.Row="1">
                <ContentControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Save spectrum image as...">
                            <MenuItem Header="Save image as emf"
                                      Command="{x:Static graphio:SaveImageAsCommand.EmfInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Save image as png"
                                      Command="{x:Static graphio:SaveImageAsCommand.PngInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        </MenuItem>
                        <MenuItem Header="Copy spectrum image as...">
                            <MenuItem Header="Copy image as emf"
                                      Command="{x:Static graphio:CopyImageAsCommand.EmfInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                            <MenuItem Header="Copy image as png"
                                      Command="{x:Static graphio:CopyImageAsCommand.BitmapInstance}"
                                      CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        </MenuItem>
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SpectrumGeneratorEditorViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="240"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <ContentControl Content="{Binding SpectrumViewModel, Mode=OneTime}"
                            Grid.Row="0" Grid.Column="0"/>
            <StackPanel Grid.Row="0" Grid.Column="2">
                <TextBlock Text="Preview setting" Foreground="White"/>
                <ContentControl Content="{Binding PreviewLipidViewModel, Mode=OneTime}"
                                Margin="8"/>
                <ui:LabeledContent PrependLabel="Adduct:" Foreground="White" Margin="8">
                    <ComboBox ItemsSource="{Binding Adducts, Mode=OneTime}"
                              SelectedItem="{Binding PreviewAdduct.Value}"/>
                </ui:LabeledContent>
                <Button Content="Preview" Command="{Binding PreviewSpectrumCommand, Mode=OneTime}"/>
            </StackPanel>

            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <ui:LabeledContent PrependLabel="Lipid class:" Foreground="White">
                        <ComboBox ItemsSource="{Binding LipidClasses, Mode=OneTime}"
                                  SelectedItem="{Binding LipidClass.Value}"/>
                    </ui:LabeledContent>
                    <ui:LabeledContent PrependLabel="Adduct:" Foreground="White">
                        <ComboBox ItemsSource="{Binding Adducts, Mode=OneTime}"
                                  SelectedItem="{Binding Adduct.Value}"/>
                    </ui:LabeledContent>
                </StackPanel>
                <GridSplitter BorderThickness="2"
                              BorderBrush="Gray"
                              HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                              Grid.Row="1"/>
                <GroupBox BorderBrush="Gray" Grid.Row="1">
                    <GroupBox.Header>
                        <ui:LabeledContent PrependLabel="Variables" Foreground="White">
                            <Button Content="&#xE710;" FontFamily="Segoe MDL2 Assets" Command="{Binding AddVariableCommand, Mode=OneTime}"/>
                        </ui:LabeledContent>
                    </GroupBox.Header>
                    <ItemsControl ItemsSource="{Binding Variables}" AlternationCount="100">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </GroupBox>
                <GroupBox BorderBrush="Gray" Grid.Row="2">
                    <GroupBox.Header>
                        <ui:LabeledContent PrependLabel="Rules" Foreground="White">
                            <Button Content="&#xE710;" FontFamily="Segoe MDL2 Assets" Command="{Binding AddRuleCommand, Mode=OneTime}"/>
                        </ui:LabeledContent>
                    </GroupBox.Header>
                    <ItemsControl ItemsSource="{Binding Rules}" AlternationCount="100">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </GroupBox>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate xmlns:ref="clr-namespace:CompMs.Common.Components;assembly=Common"
                  DataType="{x:Type ref:MoleculeMsReference}">
        <StackPanel>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <rp:EventToReactiveCommand Command="{Binding DataContext.ClickCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name, Mode=OneTime}"/>
                <TextBlock Text="{Binding CompoundClass, StringFormat=Class: {0}, Mode=OneTime}" Margin="4,0"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding AdductType, StringFormat=Adduct: {0}, Mode=OneTime}"/>
                <TextBlock Text="{Binding PrecursorMz, StringFormat=Precursor m/z: {0:N4}}" Margin="4,0"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ScanCollectionViewModel}">
        <ListBox ItemsSource="{Binding Scans}"
                 SelectedItem="{Binding Scan.Value}"
                 Background="LightGray"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:LipidReferenceCollectionViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0">
                <Button Content="&#xE721;" FontFamily="Segoe MDL2 Assets"
                        Command="{Binding ParseLipidCommand}"
                        DockPanel.Dock="Right"/>
                <TextBox Text="{Binding LipidStr.Value, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Gesture="Enter" Command="{Binding ParseLipidCommand, Mode=OneTime}"/>
                    </TextBox.InputBindings>
                </TextBox>
            </DockPanel>
            <ComboBox ItemsSource="{Binding Adducts}"
                      SelectedItem="{Binding Adduct.Value}"
                      Grid.Row="1"/>
            <TextBlock Text="{Binding Lipid.Value, StringFormat=Current lipid: {0}}"
                       Grid.Row="2"/>
            <ListBox ItemsSource="{Binding Scans, Mode=OneWay}"
                     SelectedItem="{Binding Scan.Value}"
                     Background="LightGray"
                     Grid.Row="3"/>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:LipidSelectionViewModel}">
        <StackPanel>
            <ui:LabeledContent  PrependLabel="Lipid class: " Foreground="White">
                <ComboBox ItemsSource="{Binding LipidClasses, Mode=OneTime}"
                          SelectedItem="{Binding LipidClass.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Exact mass:" Foreground="White">
                <TextBox Text="{Binding Mass.Value}"/>
            </ui:LabeledContent>
            <TextBlock Text="Chains Setting" Foreground="White"/>
            <ComboBox ItemsSource="{Binding ChainsTypes, Mode=OneTime}"
                      SelectedItem="{Binding ChainsType.Value}"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="# of chain:" Foreground="White"/>
                <TextBox Text="{Binding ChainCount.Value}" Width="40" Margin="4,0,0,0"/>
                <Button Content="&#xE710;" FontFamily="Segoe MDL2 Assets" Command="{Binding AddChainCommand, Mode=OneTime}"
                        Visibility="{Binding IsNotSubMolecularLevel.Value, Converter={StaticResource BooleanToVisibility}}"/>
                <Button Content="&#xE711;" FontFamily="Segoe MDL2 Assets" Command="{Binding RemoveChainCommand, Mode=OneTime}"
                        Visibility="{Binding IsNotSubMolecularLevel.Value, Converter={StaticResource BooleanToVisibility}}"/>
            </StackPanel>
            <ItemsControl ItemsSource="{Binding Chains}"
                          AlternationCount="100"
                          Margin="8,0,0,0"
                          Visibility="{Binding IsNotSubMolecularLevel.Value, Converter={StaticResource BooleanToVisibility}}"/>
            <ui:LabeledContent PrependLabel="chains string" Foreground="White"
                               Visibility="{Binding IsSubMolecularLevel.Value, Converter={StaticResource BooleanToVisibility}}">
                <TextBox Text="{Binding ChainsStr.Value}" Width="60"/>
            </ui:LabeledContent>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ChainSelectionViewModel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=(ItemsControl.AlternationIndex), StringFormat=Chain {0}, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="White"/>
            <ComboBox ItemsSource="{Binding ChainTypes, Mode=OneTime}"
                      SelectedItem="{Binding ChainType.Value}"/>
            <ui:LabeledContent PrependLabel="# of Carbon" Foreground="White">
                <TextBox Text="{Binding CarbonCount.Value}" Width="40" VerticalContentAlignment="Center"/>
            </ui:LabeledContent>

            <TextBlock Text="DoubleBond" Foreground="White"/>
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding DoubleBondCount.Value}" Width="40" VerticalContentAlignment="Center"/>
                <Button Content="&#xE710;" FontFamily="Segoe MDL2 Assets" Command="{Binding AddDoubleBondCommand, Mode=OneTime}"/>
            </StackPanel>
            <ItemsControl ItemsSource="{Binding DoubleBonds}"
                          Margin="8,0,0,8"/>

            <TextBlock Text="Oxidized" Foreground="White"/>
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding OxidizedCount.Value}" Width="40"/>
                <Button Content="&#xE710;" FontFamily="Segoe MDL2 Assets" Command="{Binding AddOxidizedCommand, Mode=OneTime}"/>
            </StackPanel>
            <ItemsControl ItemsSource="{Binding Oxidises}"
                          Margin="8,0,0,8"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:DoubleBondSetViewModel}">
        <StackPanel Orientation="Horizontal">
            <TextBox Text="{Binding Position.Value}" Width="40"/>
            <ComboBox ItemsSource="{Binding BondTypes, Mode=OneTime}"
                      SelectedItem="{Binding BondType.Value}"/>
            <Button Content="&#xE711;" FontFamily="Segoe MDL2 Assets" Command="{Binding RemoveCommand, Mode=OneTime}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:OxidizedSetViewModel}">
        <StackPanel Orientation="Horizontal">
            <TextBox Text="{Binding Position.Value}"/>
            <Button Content="&#xE711;" FontFamily="Segoe MDL2 Assets" Command="{Binding RemoveCommand, Mode=OneTime}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SpectrumGenerationRuleViewModel}">
        <StackPanel>
            <ui:LabeledContent PrependLabel="{Binding Path=(ItemsControl.AlternationIndex), StringFormat=Rule {0}, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="White">
                <Button Content="&#xE711;" FontFamily="Segoe MDL2 Assets" Command="{Binding RemoveCommand, Mode=OneTime}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Variable:" Foreground="White">
                <ComboBox ItemsSource="{Binding Variables}"
                          SelectedItem="{Binding Variable.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Intensity:" Foreground="White">
                <TextBox Text="{Binding Intensity.Value}"/>
            </ui:LabeledContent>
            <TextBlock Text="Comment:" Foreground="White"/>
            <TextBox Text="{Binding Comment.Value}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:MzVariableViewModel}">
        <StackPanel>
            <ui:LabeledContent PrependLabel="{Binding Path=(ItemsControl.AlternationIndex), StringFormat=Variable {0}, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="White">
                <Button Content="&#xE711;" FontFamily="Segoe MDL2 Assets" Command="{Binding RemoveCommand, Mode=OneTime}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Variable type:" Foreground="White">
                <ComboBox ItemsSource="{x:Static Member=model:MzVariableModel.VariableTypes}"
                          SelectedItem="{Binding VariableType.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Placeholder type:" Foreground="White" Visibility="{Binding IsPlaceholder.Value, Converter={StaticResource BooleanToVisibility}}">
                <ComboBox ItemsSource="{x:Static Member=model:MzVariableModel.PlaceholderTypes}"
                          SelectedItem="{Binding PlaceholderType.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Exact mass:" Foreground="White" Visibility="{Binding IsConstant.Value, Converter={StaticResource BooleanToVisibility}}">
                <TextBox Text="{Binding ExactMass.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Chain position:" Foreground="White" Visibility="{Binding ShouldSelectChain.Value, Converter={StaticResource BooleanToVisibility}}">
                <TextBox Text="{Binding ChainPosition.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Left variable:" Foreground="White" Visibility="{Binding ShouldSelectReference.Value, Converter={StaticResource BooleanToVisibility}}">
                <ComboBox ItemsSource="{Binding Mzs}"
                          SelectedItem="{Binding Left.Value}"/>
            </ui:LabeledContent>
            <ui:LabeledContent PrependLabel="Right variable:" Foreground="White" Visibility="{Binding ShouldSelectReference.Value, Converter={StaticResource BooleanToVisibility}}">
                <ComboBox ItemsSource="{Binding Mzs}"
                          SelectedItem="{Binding Right.Value}"/>
            </ui:LabeledContent>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>